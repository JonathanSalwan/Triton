#!/usr/bin/env python2
## -*- coding: utf-8 -*-

from __future__          import print_function
from triton              import *
from unicorn             import *
from unicorn.arm_const   import *

import sys
import pprint
import random

# DEBUG = True
DEBUG = False
ADDR  = 0x100000
STACK = 0x200000
HEAP  = 0x300000
SIZE  = 5 * 1024 * 1024
CODE  = [
    # MISC ------------------------------------------------------------------- #
    (b"\x01\x00\xc0\xe1", "bic r0, r0, r1"),
    (b"\x71\x12\xa0\xe1", "ror r1, r1, r2"),
    (b"\x30\x0f\xbf\xe6", "rev r0, r0"),

    (b"\x00\xc0\x8f\xe2", "add ip, pc, #0, 12"),
    (b"\x00\xc0\x8f\xe2", "add ip, pc, #0"),
    (b"\x10\xca\x8c\xe2", "add ip, ip, #16, #20"),
    (b"\x01\xc8\x8c\xe2", "add ip, ip, #0x10000"),
    (b"\x10\xc0\x8c\xe2", "add ip, ip, #16"),
    (b"\x10\xc0\x8c\xe2", "add ip, ip, #16, #0"),

    # ADC -------------------------------------------------------------------- #
    (b"\x02\x00\xa1\xe2", "adc r0, r1, #2"),
    (b"\x02\x00\xa1\x02", "adceq r0, r1, #2"),
    (b"\x02\x00\xa1\x12", "adcne r0, r1, #2"),
    (b"\x02\x00\xa1\x22", "adccs r0, r1, #2"),
    (b"\x02\x00\xa1\x32", "adccc r0, r1, #2"),
    (b"\x02\x00\xa1\x42", "adcmi r0, r1, #2"),
    (b"\x02\x00\xa1\x52", "adcpl r0, r1, #2"),
    (b"\x02\x00\xa1\x62", "adcvs r0, r1, #2"),
    (b"\x02\x00\xa1\x72", "adcvc r0, r1, #2"),
    (b"\x02\x00\xa1\x82", "adchi r0, r1, #2"),
    (b"\x02\x00\xa1\x92", "adcls r0, r1, #2"),
    (b"\x02\x00\xa1\xa2", "adcge r0, r1, #2"),
    (b"\x02\x00\xa1\xb2", "adclt r0, r1, #2"),
    (b"\x02\x00\xa1\xc2", "adcgt r0, r1, #2"),
    (b"\x02\x00\xa1\xd2", "adcle r0, r1, #2"),
    (b"\x02\x00\xa1\xe2", "adcal r0, r1, #2"),

    (b"\x03\x00\xa1\xe0", "adc r0, r1, r3"),
    (b"\x03\x00\xa1\x00", "adceq r0, r1, r3"),
    (b"\x03\x00\xa1\x10", "adcne r0, r1, r3"),
    (b"\x03\x00\xa1\x20", "adccs r0, r1, r3"),
    (b"\x03\x00\xa1\x30", "adccc r0, r1, r3"),
    (b"\x03\x00\xa1\x40", "adcmi r0, r1, r3"),
    (b"\x03\x00\xa1\x50", "adcpl r0, r1, r3"),
    (b"\x03\x00\xa1\x60", "adcvs r0, r1, r3"),
    (b"\x03\x00\xa1\x70", "adcvc r0, r1, r3"),
    (b"\x03\x00\xa1\x80", "adchi r0, r1, r3"),
    (b"\x03\x00\xa1\x90", "adcls r0, r1, r3"),
    (b"\x03\x00\xa1\xa0", "adcge r0, r1, r3"),
    (b"\x03\x00\xa1\xb0", "adclt r0, r1, r3"),
    (b"\x03\x00\xa1\xc0", "adcgt r0, r1, r3"),
    (b"\x03\x00\xa1\xd0", "adcle r0, r1, r3"),
    (b"\x03\x00\xa1\xe0", "adcal r0, r1, r3"),

    # ADC - ASR Shifter
    (b"\x42\x02\xa1\x00", "adceq r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x10", "adcne r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x20", "adccs r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x30", "adccc r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x40", "adcmi r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x50", "adcpl r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x60", "adcvs r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x70", "adcvc r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x80", "adchi r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\x90", "adcls r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\xa0", "adcge r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\xb0", "adclt r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\xc0", "adcgt r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\xd0", "adcle r0, r1, r2, asr #4"),
    (b"\x42\x02\xa1\xe0", "adcal r0, r1, r2, asr #4"),

    (b"\x52\x03\xa1\x00", "adceq r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x10", "adcne r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x20", "adccs r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x30", "adccc r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x40", "adcmi r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x50", "adcpl r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x60", "adcvs r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x70", "adcvc r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x80", "adchi r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\x90", "adcls r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\xa0", "adcge r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\xb0", "adclt r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\xc0", "adcgt r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\xd0", "adcle r0, r1, r2, asr r3"),
    (b"\x52\x03\xa1\xe0", "adcal r0, r1, r2, asr r3"),

    # ADC - LSL Shifter
    (b"\x02\x02\xa1\x00", "adceq r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x10", "adcne r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x20", "adccs r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x30", "adccc r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x40", "adcmi r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x50", "adcpl r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x60", "adcvs r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x70", "adcvc r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x80", "adchi r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\x90", "adcls r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\xa0", "adcge r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\xb0", "adclt r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\xc0", "adcgt r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\xd0", "adcle r0, r1, r2, lsl #4"),
    (b"\x02\x02\xa1\xe0", "adcal r0, r1, r2, lsl #4"),

    (b"\x12\x03\xa1\x00", "adceq r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x10", "adcne r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x20", "adccs r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x30", "adccc r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x40", "adcmi r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x50", "adcpl r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x60", "adcvs r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x70", "adcvc r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x80", "adchi r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\x90", "adcls r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\xa0", "adcge r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\xb0", "adclt r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\xc0", "adcgt r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\xd0", "adcle r0, r1, r2, lsl r3"),
    (b"\x12\x03\xa1\xe0", "adcal r0, r1, r2, lsl r3"),

    # ADC - LSR Shifter
    (b"\x22\x02\xa1\x00", "adceq r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x10", "adcne r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x20", "adccs r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x30", "adccc r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x40", "adcmi r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x50", "adcpl r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x60", "adcvs r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x70", "adcvc r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x80", "adchi r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\x90", "adcls r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\xa0", "adcge r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\xb0", "adclt r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\xc0", "adcgt r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\xd0", "adcle r0, r1, r2, lsr #4"),
    (b"\x22\x02\xa1\xe0", "adcal r0, r1, r2, lsr #4"),

    (b"\x32\x03\xa1\x00", "adceq r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x10", "adcne r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x20", "adccs r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x30", "adccc r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x40", "adcmi r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x50", "adcpl r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x60", "adcvs r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x70", "adcvc r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x80", "adchi r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\x90", "adcls r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\xa0", "adcge r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\xb0", "adclt r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\xc0", "adcgt r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\xd0", "adcle r0, r1, r2, lsr r3"),
    (b"\x32\x03\xa1\xe0", "adcal r0, r1, r2, lsr r3"),

    # ADC - ROR Shifter
    (b"\x62\x02\xa1\x00", "adceq r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x10", "adcne r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x20", "adccs r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x30", "adccc r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x40", "adcmi r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x50", "adcpl r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x60", "adcvs r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x70", "adcvc r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x80", "adchi r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\x90", "adcls r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\xa0", "adcge r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\xb0", "adclt r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\xc0", "adcgt r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\xd0", "adcle r0, r1, r2, ror #4"),
    (b"\x62\x02\xa1\xe0", "adcal r0, r1, r2, ror #4"),

    (b"\x72\x03\xa1\x00", "adceq r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x10", "adcne r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x20", "adccs r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x30", "adccc r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x40", "adcmi r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x50", "adcpl r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x60", "adcvs r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x70", "adcvc r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x80", "adchi r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\x90", "adcls r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\xa0", "adcge r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\xb0", "adclt r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\xc0", "adcgt r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\xd0", "adcle r0, r1, r2, ror r3"),
    (b"\x72\x03\xa1\xe0", "adcal r0, r1, r2, ror r3"),

    # ADC - RRX Shifter
    (b"\x62\x00\xa1\x00", "adceq r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x10", "adcne r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x20", "adccs r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x30", "adccc r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x40", "adcmi r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x50", "adcpl r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x60", "adcvs r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x70", "adcvc r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x80", "adchi r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\x90", "adcls r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\xa0", "adcge r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\xb0", "adclt r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\xc0", "adcgt r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\xd0", "adcle r0, r1, r2, rrx"),
    (b"\x62\x00\xa1\xe0", "adcal r0, r1, r2, rrx"),

    # ADCS ------------------------------------------------------------------- #
    (b"\x02\x00\xb1\xe2", "adcs r0, r1, #2"),
    (b"\x02\x00\xb1\x02", "adcseq r0, r1, #2"),
    (b"\x02\x00\xb1\x12", "adcsne r0, r1, #2"),
    (b"\x02\x00\xb1\x22", "adcscs r0, r1, #2"),
    (b"\x02\x00\xb1\x32", "adcscc r0, r1, #2"),
    (b"\x02\x00\xb1\x42", "adcsmi r0, r1, #2"),
    (b"\x02\x00\xb1\x52", "adcspl r0, r1, #2"),
    (b"\x02\x00\xb1\x62", "adcsvs r0, r1, #2"),
    (b"\x02\x00\xb1\x72", "adcsvc r0, r1, #2"),
    (b"\x02\x00\xb1\x82", "adcshi r0, r1, #2"),
    (b"\x02\x00\xb1\x92", "adcsls r0, r1, #2"),
    (b"\x02\x00\xb1\xa2", "adcsge r0, r1, #2"),
    (b"\x02\x00\xb1\xb2", "adcslt r0, r1, #2"),
    (b"\x02\x00\xb1\xc2", "adcsgt r0, r1, #2"),
    (b"\x02\x00\xb1\xd2", "adcsle r0, r1, #2"),
    (b"\x02\x00\xb1\xe2", "adcsal r0, r1, #2"),

    (b"\x03\x00\xb1\xe0", "adcs r0, r1, r3"),
    (b"\x03\x00\xb1\x00", "adcseq r0, r1, r3"),
    (b"\x03\x00\xb1\x10", "adcsne r0, r1, r3"),
    (b"\x03\x00\xb1\x20", "adcscs r0, r1, r3"),
    (b"\x03\x00\xb1\x30", "adcscc r0, r1, r3"),
    (b"\x03\x00\xb1\x40", "adcsmi r0, r1, r3"),
    (b"\x03\x00\xb1\x50", "adcspl r0, r1, r3"),
    (b"\x03\x00\xb1\x60", "adcsvs r0, r1, r3"),
    (b"\x03\x00\xb1\x70", "adcsvc r0, r1, r3"),
    (b"\x03\x00\xb1\x80", "adcshi r0, r1, r3"),
    (b"\x03\x00\xb1\x90", "adcsls r0, r1, r3"),
    (b"\x03\x00\xb1\xa0", "adcsge r0, r1, r3"),
    (b"\x03\x00\xb1\xb0", "adcslt r0, r1, r3"),
    (b"\x03\x00\xb1\xc0", "adcsgt r0, r1, r3"),
    (b"\x03\x00\xb1\xd0", "adcsle r0, r1, r3"),
    (b"\x03\x00\xb1\xe0", "adcsal r0, r1, r3"),

    # ADCS - ASR Shifter
    (b"\x42\x02\xb1\x00", "adcseq r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x10", "adcsne r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x20", "adcscs r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x30", "adcscc r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x40", "adcsmi r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x50", "adcspl r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x60", "adcsvs r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x70", "adcsvc r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x80", "adcshi r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\x90", "adcsls r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\xa0", "adcsge r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\xb0", "adcslt r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\xc0", "adcsgt r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\xd0", "adcsle r0, r1, r2, asr #4"),
    (b"\x42\x02\xb1\xe0", "adcsal r0, r1, r2, asr #4"),

    (b"\x52\x03\xb1\x00", "adcseq r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x10", "adcsne r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x20", "adcscs r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x30", "adcscc r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x40", "adcsmi r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x50", "adcspl r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x60", "adcsvs r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x70", "adcsvc r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x80", "adcshi r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\x90", "adcsls r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\xa0", "adcsge r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\xb0", "adcslt r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\xc0", "adcsgt r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\xd0", "adcsle r0, r1, r2, asr r3"),
    (b"\x52\x03\xb1\xe0", "adcsal r0, r1, r2, asr r3"),

    # ADCS - LSL Shifter
    (b"\x02\x02\xb1\x00", "adcseq r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x10", "adcsne r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x20", "adcscs r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x30", "adcscc r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x40", "adcsmi r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x50", "adcspl r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x60", "adcsvs r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x70", "adcsvc r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x80", "adcshi r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\x90", "adcsls r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\xa0", "adcsge r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\xb0", "adcslt r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\xc0", "adcsgt r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\xd0", "adcsle r0, r1, r2, lsl #4"),
    (b"\x02\x02\xb1\xe0", "adcsal r0, r1, r2, lsl #4"),

    (b"\x12\x03\xb1\x00", "adcseq r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x10", "adcsne r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x20", "adcscs r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x30", "adcscc r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x40", "adcsmi r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x50", "adcspl r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x60", "adcsvs r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x70", "adcsvc r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x80", "adcshi r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\x90", "adcsls r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\xa0", "adcsge r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\xb0", "adcslt r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\xc0", "adcsgt r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\xd0", "adcsle r0, r1, r2, lsl r3"),
    (b"\x12\x03\xb1\xe0", "adcsal r0, r1, r2, lsl r3"),

    # ADCS - LSR Shifter
    (b"\x22\x02\xb1\x00", "adcseq r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x10", "adcsne r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x20", "adcscs r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x30", "adcscc r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x40", "adcsmi r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x50", "adcspl r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x60", "adcsvs r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x70", "adcsvc r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x80", "adcshi r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\x90", "adcsls r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\xa0", "adcsge r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\xb0", "adcslt r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\xc0", "adcsgt r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\xd0", "adcsle r0, r1, r2, lsr #4"),
    (b"\x22\x02\xb1\xe0", "adcsal r0, r1, r2, lsr #4"),

    (b"\x32\x03\xb1\x00", "adcseq r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x10", "adcsne r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x20", "adcscs r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x30", "adcscc r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x40", "adcsmi r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x50", "adcspl r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x60", "adcsvs r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x70", "adcsvc r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x80", "adcshi r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\x90", "adcsls r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\xa0", "adcsge r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\xb0", "adcslt r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\xc0", "adcsgt r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\xd0", "adcsle r0, r1, r2, lsr r3"),
    (b"\x32\x03\xb1\xe0", "adcsal r0, r1, r2, lsr r3"),

    # ADCS - ROR Shifter
    (b"\x62\x02\xb1\x00", "adcseq r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x10", "adcsne r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x20", "adcscs r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x30", "adcscc r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x40", "adcsmi r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x50", "adcspl r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x60", "adcsvs r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x70", "adcsvc r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x80", "adcshi r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\x90", "adcsls r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\xa0", "adcsge r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\xb0", "adcslt r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\xc0", "adcsgt r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\xd0", "adcsle r0, r1, r2, ror #4"),
    (b"\x62\x02\xb1\xe0", "adcsal r0, r1, r2, ror #4"),

    (b"\x72\x03\xb1\x00", "adcseq r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x10", "adcsne r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x20", "adcscs r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x30", "adcscc r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x40", "adcsmi r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x50", "adcspl r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x60", "adcsvs r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x70", "adcsvc r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x80", "adcshi r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\x90", "adcsls r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\xa0", "adcsge r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\xb0", "adcslt r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\xc0", "adcsgt r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\xd0", "adcsle r0, r1, r2, ror r3"),
    (b"\x72\x03\xb1\xe0", "adcsal r0, r1, r2, ror r3"),

    # ADCS - RRX Shifter
    (b"\x62\x00\xb1\x00", "adcseq r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x10", "adcsne r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x20", "adcscs r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x30", "adcscc r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x40", "adcsmi r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x50", "adcspl r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x60", "adcsvs r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x70", "adcsvc r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x80", "adcshi r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\x90", "adcsls r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\xa0", "adcsge r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\xb0", "adcslt r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\xc0", "adcsgt r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\xd0", "adcsle r0, r1, r2, rrx"),
    (b"\x62\x00\xb1\xe0", "adcsal r0, r1, r2, rrx"),

    # ADC(S) - Misc
    (b"\x01\x00\xa2\xe0", "adc r0, r2, r1"),
    (b"\x01\x00\xa1\xe0", "adc r0, r1, r1"),
    (b"\x01\x10\xa1\xe0", "adc r1, r1, r1"),
    (b"\x11\x01\xa2\xe0", "adc r0, r2, r1, lsl r1"),
    (b"\x11\x01\xa1\xe0", "adc r0, r1, r1, lsl r1"),
    (b"\x11\x11\xa1\xe0", "adc r1, r1, r1, lsl r1"),
    (b"\xc1\x1f\xa1\xe0", "adc r1, r1, r1, asr #31"),
    (b"\x81\x1f\xa1\xe0", "adc r1, r1, r1, lsl #31"),
    (b"\xa1\x1f\xa1\xe0", "adc r1, r1, r1, lsr #31"),
    (b"\xe1\x1f\xa1\xe0", "adc r1, r1, r1, ror #31"),

    # ADC(S) with PC as operand ---------------------------------------------- #
    (b"\x0f\x00\xa1\xe0", "adc r0, r1, pc"),
    (b"\x02\x00\xaf\xe0", "adc r0, pc, r2"),

    (b"\x4f\x01\xa1\xe0", "adc r0, r1, pc, asr #2"),
    (b"\x42\x01\xaf\xe0", "adc r0, pc, r2, asr #2"),
    (b"\x0f\x01\xa1\xe0", "adc r0, r1, pc, lsl #2"),
    (b"\x02\x01\xaf\xe0", "adc r0, pc, r2, lsl #2"),
    (b"\x2f\x01\xa1\xe0", "adc r0, r1, pc, lsr #2"),
    (b"\x22\x01\xaf\xe0", "adc r0, pc, r2, lsr #2"),
    (b"\x6f\x01\xa1\xe0", "adc r0, r1, pc, ror #2"),
    (b"\x62\x01\xaf\xe0", "adc r0, pc, r2, ror #2"),
    (b"\x6f\x00\xa1\xe0", "adc r0, r1, pc, rrx"),
    (b"\x62\x00\xaf\xe0", "adc r0, pc, r2, rrx"),
    (b"\x5f\x03\xa1\xe0", "adc r0, r1, pc, asr r3"),
    (b"\x1f\x03\xa1\xe0", "adc r0, r1, pc, lsl r3"),
    (b"\x3f\x03\xa1\xe0", "adc r0, r1, pc, lsr r3"),
    (b"\x7f\x03\xa1\xe0", "adc r0, r1, pc, ror r3"),

    (b"\x4f\x01\xb1\xe0", "adcs r0, r1, pc, asr #2"),
    (b"\x42\x01\xbf\xe0", "adcs r0, pc, r2, asr #2"),
    (b"\x0f\x01\xb1\xe0", "adcs r0, r1, pc, lsl #2"),
    (b"\x02\x01\xbf\xe0", "adcs r0, pc, r2, lsl #2"),
    (b"\x2f\x01\xb1\xe0", "adcs r0, r1, pc, lsr #2"),
    (b"\x22\x01\xbf\xe0", "adcs r0, pc, r2, lsr #2"),
    (b"\x6f\x01\xb1\xe0", "adcs r0, r1, pc, ror #2"),
    (b"\x62\x01\xbf\xe0", "adcs r0, pc, r2, ror #2"),
    (b"\x6f\x00\xb1\xe0", "adcs r0, r1, pc, rrx"),
    (b"\x62\x00\xbf\xe0", "adcs r0, pc, r2, rrx"),
    (b"\x5f\x03\xb1\xe0", "adcs r0, r1, pc, asr r3"),
    (b"\x1f\x03\xb1\xe0", "adcs r0, r1, pc, lsl r3"),
    (b"\x3f\x03\xb1\xe0", "adcs r0, r1, pc, lsr r3"),
    (b"\x7f\x03\xb1\xe0", "adcs r0, r1, pc, ror r3"),

    # ADC(S) with SP as operand ---------------------------------------------- #
    (b"\x02\x00\xbd\xe2", "adcs r0, sp, #2"),
    (b"\x02\x00\xbd\x02", "adcseq r0, sp, #2"),
    (b"\x02\x00\xbd\x12", "adcsne r0, sp, #2"),
    (b"\x02\x00\xbd\x22", "adcscs r0, sp, #2"),
    (b"\x02\x00\xbd\x32", "adcscc r0, sp, #2"),
    (b"\x02\x00\xbd\x42", "adcsmi r0, sp, #2"),
    (b"\x02\x00\xbd\x52", "adcspl r0, sp, #2"),
    (b"\x02\x00\xbd\x62", "adcsvs r0, sp, #2"),
    (b"\x02\x00\xbd\x72", "adcsvc r0, sp, #2"),
    (b"\x02\x00\xbd\x82", "adcshi r0, sp, #2"),
    (b"\x02\x00\xbd\x92", "adcsls r0, sp, #2"),
    (b"\x02\x00\xbd\xa2", "adcsge r0, sp, #2"),
    (b"\x02\x00\xbd\xb2", "adcslt r0, sp, #2"),
    (b"\x02\x00\xbd\xc2", "adcsgt r0, sp, #2"),
    (b"\x02\x00\xbd\xd2", "adcsle r0, sp, #2"),
    (b"\x02\x00\xbd\xe2", "adcsal r0, sp, #2"),

    (b"\x03\x00\xbd\xe0", "adcs r0, sp, r3"),
    (b"\x03\x00\xbd\x00", "adcseq r0, sp, r3"),
    (b"\x03\x00\xbd\x10", "adcsne r0, sp, r3"),
    (b"\x03\x00\xbd\x20", "adcscs r0, sp, r3"),
    (b"\x03\x00\xbd\x30", "adcscc r0, sp, r3"),
    (b"\x03\x00\xbd\x40", "adcsmi r0, sp, r3"),
    (b"\x03\x00\xbd\x50", "adcspl r0, sp, r3"),
    (b"\x03\x00\xbd\x60", "adcsvs r0, sp, r3"),
    (b"\x03\x00\xbd\x70", "adcsvc r0, sp, r3"),
    (b"\x03\x00\xbd\x80", "adcshi r0, sp, r3"),
    (b"\x03\x00\xbd\x90", "adcsls r0, sp, r3"),
    (b"\x03\x00\xbd\xa0", "adcsge r0, sp, r3"),
    (b"\x03\x00\xbd\xb0", "adcslt r0, sp, r3"),
    (b"\x03\x00\xbd\xc0", "adcsgt r0, sp, r3"),
    (b"\x03\x00\xbd\xd0", "adcsle r0, sp, r3"),
    (b"\x03\x00\xbd\xe0", "adcsal r0, sp, r3"),

    (b"\x02\xd0\xbd\xe2", "adcs sp, sp, #2"),
    (b"\x02\xd0\xbd\x02", "adcseq sp, sp, #2"),
    (b"\x02\xd0\xbd\x12", "adcsne sp, sp, #2"),
    (b"\x02\xd0\xbd\x22", "adcscs sp, sp, #2"),
    (b"\x02\xd0\xbd\x32", "adcscc sp, sp, #2"),
    (b"\x02\xd0\xbd\x42", "adcsmi sp, sp, #2"),
    (b"\x02\xd0\xbd\x52", "adcspl sp, sp, #2"),
    (b"\x02\xd0\xbd\x62", "adcsvs sp, sp, #2"),
    (b"\x02\xd0\xbd\x72", "adcsvc sp, sp, #2"),
    (b"\x02\xd0\xbd\x82", "adcshi sp, sp, #2"),
    (b"\x02\xd0\xbd\x92", "adcsls sp, sp, #2"),
    (b"\x02\xd0\xbd\xa2", "adcsge sp, sp, #2"),
    (b"\x02\xd0\xbd\xb2", "adcslt sp, sp, #2"),
    (b"\x02\xd0\xbd\xc2", "adcsgt sp, sp, #2"),
    (b"\x02\xd0\xbd\xd2", "adcsle sp, sp, #2"),
    (b"\x02\xd0\xbd\xe2", "adcsal sp, sp, #2"),

    (b"\x03\xd0\xbd\xe0", "adcs sp, sp, r3"),
    (b"\x03\xd0\xbd\x00", "adcseq sp, sp, r3"),
    (b"\x03\xd0\xbd\x10", "adcsne sp, sp, r3"),
    (b"\x03\xd0\xbd\x20", "adcscs sp, sp, r3"),
    (b"\x03\xd0\xbd\x30", "adcscc sp, sp, r3"),
    (b"\x03\xd0\xbd\x40", "adcsmi sp, sp, r3"),
    (b"\x03\xd0\xbd\x50", "adcspl sp, sp, r3"),
    (b"\x03\xd0\xbd\x60", "adcsvs sp, sp, r3"),
    (b"\x03\xd0\xbd\x70", "adcsvc sp, sp, r3"),
    (b"\x03\xd0\xbd\x80", "adcshi sp, sp, r3"),
    (b"\x03\xd0\xbd\x90", "adcsls sp, sp, r3"),
    (b"\x03\xd0\xbd\xa0", "adcsge sp, sp, r3"),
    (b"\x03\xd0\xbd\xb0", "adcslt sp, sp, r3"),
    (b"\x03\xd0\xbd\xc0", "adcsgt sp, sp, r3"),
    (b"\x03\xd0\xbd\xd0", "adcsle sp, sp, r3"),
    (b"\x03\xd0\xbd\xe0", "adcsal sp, sp, r3"),

    (b"\x1d\xdd\xad\xe0", "adc sp, sp, sp, lsl sp"),
    (b"\x1d\xdd\xbd\xe0", "adcs sp, sp, sp, lsl sp"),
    (b"\x3d\xdd\xad\xe0", "adc sp, sp, sp, lsr sp"),
    (b"\x3d\xdd\xbd\xe0", "adcs sp, sp, sp, lsr sp"),
    (b"\x5d\xdd\xad\xe0", "adc sp, sp, sp, asr sp"),
    (b"\x5d\xdd\xbd\xe0", "adcs sp, sp, sp, asr sp"),
    (b"\x5d\xdd\xad\xe0", "adc sp, sp, sp, asr sp"),
    (b"\x5d\xdd\xbd\xe0", "adcs sp, sp, sp, asr sp"),
    (b"\x7d\xdd\xad\xe0", "adc sp, sp, sp, ror sp"),
    (b"\x7d\xdd\xbd\xe0", "adcs sp, sp, sp, ror sp"),
    (b"\x7d\xdd\xad\xe0", "adc sp, sp, sp, ror sp"),
    (b"\x7d\xdd\xbd\xe0", "adcs sp, sp, sp, ror sp"),

    # ADD -------------------------------------------------------------------- #
    (b"\x02\x00\x81\xe2", "add r0, r1, #2"),
    (b"\x02\x00\x81\x02", "addeq r0, r1, #2"),
    (b"\x02\x00\x81\x12", "addne r0, r1, #2"),
    (b"\x02\x00\x81\x22", "addcs r0, r1, #2"),
    (b"\x02\x00\x81\x32", "addcc r0, r1, #2"),
    (b"\x02\x00\x81\x42", "addmi r0, r1, #2"),
    (b"\x02\x00\x81\x52", "addpl r0, r1, #2"),
    (b"\x02\x00\x81\x62", "addvs r0, r1, #2"),
    (b"\x02\x00\x81\x72", "addvc r0, r1, #2"),
    (b"\x02\x00\x81\x82", "addhi r0, r1, #2"),
    (b"\x02\x00\x81\x92", "addls r0, r1, #2"),
    (b"\x02\x00\x81\xa2", "addge r0, r1, #2"),
    (b"\x02\x00\x81\xb2", "addlt r0, r1, #2"),
    (b"\x02\x00\x81\xc2", "addgt r0, r1, #2"),
    (b"\x02\x00\x81\xd2", "addle r0, r1, #2"),
    (b"\x02\x00\x81\xe2", "addal r0, r1, #2"),

    (b"\x03\x00\x81\xe0", "add r0, r1, r3"),
    (b"\x03\x00\x81\x00", "addeq r0, r1, r3"),
    (b"\x03\x00\x81\x10", "addne r0, r1, r3"),
    (b"\x03\x00\x81\x20", "addcs r0, r1, r3"),
    (b"\x03\x00\x81\x30", "addcc r0, r1, r3"),
    (b"\x03\x00\x81\x40", "addmi r0, r1, r3"),
    (b"\x03\x00\x81\x50", "addpl r0, r1, r3"),
    (b"\x03\x00\x81\x60", "addvs r0, r1, r3"),
    (b"\x03\x00\x81\x70", "addvc r0, r1, r3"),
    (b"\x03\x00\x81\x80", "addhi r0, r1, r3"),
    (b"\x03\x00\x81\x90", "addls r0, r1, r3"),
    (b"\x03\x00\x81\xa0", "addge r0, r1, r3"),
    (b"\x03\x00\x81\xb0", "addlt r0, r1, r3"),
    (b"\x03\x00\x81\xc0", "addgt r0, r1, r3"),
    (b"\x03\x00\x81\xd0", "addle r0, r1, r3"),
    (b"\x03\x00\x81\xe0", "addal r0, r1, r3"),

    # ADD - ASR Shifter
    (b"\x42\x02\x81\x00", "addeq r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x10", "addne r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x20", "addcs r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x30", "addcc r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x40", "addmi r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x50", "addpl r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x60", "addvs r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x70", "addvc r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x80", "addhi r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\x90", "addls r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\xa0", "addge r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\xb0", "addlt r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\xc0", "addgt r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\xd0", "addle r0, r1, r2, asr #4"),
    (b"\x42\x02\x81\xe0", "addal r0, r1, r2, asr #4"),

    (b"\x52\x03\x81\x00", "addeq r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x10", "addne r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x20", "addcs r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x30", "addcc r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x40", "addmi r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x50", "addpl r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x60", "addvs r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x70", "addvc r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x80", "addhi r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\x90", "addls r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\xa0", "addge r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\xb0", "addlt r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\xc0", "addgt r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\xd0", "addle r0, r1, r2, asr r3"),
    (b"\x52\x03\x81\xe0", "addal r0, r1, r2, asr r3"),

    # ADD - LSL Shifter
    (b"\x02\x02\x81\x00", "addeq r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x10", "addne r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x20", "addcs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x30", "addcc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x40", "addmi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x50", "addpl r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x60", "addvs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x70", "addvc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x80", "addhi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\x90", "addls r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\xa0", "addge r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\xb0", "addlt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\xc0", "addgt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\xd0", "addle r0, r1, r2, lsl #4"),
    (b"\x02\x02\x81\xe0", "addal r0, r1, r2, lsl #4"),

    (b"\x12\x03\x81\x00", "addeq r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x10", "addne r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x20", "addcs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x30", "addcc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x40", "addmi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x50", "addpl r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x60", "addvs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x70", "addvc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x80", "addhi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\x90", "addls r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\xa0", "addge r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\xb0", "addlt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\xc0", "addgt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\xd0", "addle r0, r1, r2, lsl r3"),
    (b"\x12\x03\x81\xe0", "addal r0, r1, r2, lsl r3"),

    # ADD - LSR Shifter
    (b"\x22\x02\x81\x00", "addeq r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x10", "addne r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x20", "addcs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x30", "addcc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x40", "addmi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x50", "addpl r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x60", "addvs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x70", "addvc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x80", "addhi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\x90", "addls r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\xa0", "addge r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\xb0", "addlt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\xc0", "addgt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\xd0", "addle r0, r1, r2, lsr #4"),
    (b"\x22\x02\x81\xe0", "addal r0, r1, r2, lsr #4"),

    (b"\x32\x03\x81\x00", "addeq r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x10", "addne r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x20", "addcs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x30", "addcc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x40", "addmi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x50", "addpl r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x60", "addvs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x70", "addvc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x80", "addhi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\x90", "addls r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\xa0", "addge r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\xb0", "addlt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\xc0", "addgt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\xd0", "addle r0, r1, r2, lsr r3"),
    (b"\x32\x03\x81\xe0", "addal r0, r1, r2, lsr r3"),

    # ADD - ROR Shifter
    (b"\x62\x02\x81\x00", "addeq r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x10", "addne r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x20", "addcs r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x30", "addcc r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x40", "addmi r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x50", "addpl r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x60", "addvs r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x70", "addvc r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x80", "addhi r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\x90", "addls r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\xa0", "addge r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\xb0", "addlt r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\xc0", "addgt r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\xd0", "addle r0, r1, r2, ror #4"),
    (b"\x62\x02\x81\xe0", "addal r0, r1, r2, ror #4"),

    (b"\x72\x03\x81\x00", "addeq r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x10", "addne r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x20", "addcs r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x30", "addcc r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x40", "addmi r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x50", "addpl r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x60", "addvs r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x70", "addvc r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x80", "addhi r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\x90", "addls r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\xa0", "addge r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\xb0", "addlt r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\xc0", "addgt r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\xd0", "addle r0, r1, r2, ror r3"),
    (b"\x72\x03\x81\xe0", "addal r0, r1, r2, ror r3"),

    # ADD - RRX Shifter
    (b"\x62\x00\x81\x00", "addeq r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x10", "addne r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x20", "addcs r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x30", "addcc r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x40", "addmi r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x50", "addpl r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x60", "addvs r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x70", "addvc r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x80", "addhi r0, r1, r2, rrx"),
    (b"\x62\x00\x81\x90", "addls r0, r1, r2, rrx"),
    (b"\x62\x00\x81\xa0", "addge r0, r1, r2, rrx"),
    (b"\x62\x00\x81\xb0", "addlt r0, r1, r2, rrx"),
    (b"\x62\x00\x81\xc0", "addgt r0, r1, r2, rrx"),
    (b"\x62\x00\x81\xd0", "addle r0, r1, r2, rrx"),
    (b"\x62\x00\x81\xe0", "addal r0, r1, r2, rrx"),

    # ADDS ------------------------------------------------------------------- #
    (b"\x02\x00\x91\xe2", "adds r0, r1, #2"),
    (b"\x02\x00\x91\x02", "addseq r0, r1, #2"),
    (b"\x02\x00\x91\x12", "addsne r0, r1, #2"),
    (b"\x02\x00\x91\x22", "addscs r0, r1, #2"),
    (b"\x02\x00\x91\x32", "addscc r0, r1, #2"),
    (b"\x02\x00\x91\x42", "addsmi r0, r1, #2"),
    (b"\x02\x00\x91\x52", "addspl r0, r1, #2"),
    (b"\x02\x00\x91\x62", "addsvs r0, r1, #2"),
    (b"\x02\x00\x91\x72", "addsvc r0, r1, #2"),
    (b"\x02\x00\x91\x82", "addshi r0, r1, #2"),
    (b"\x02\x00\x91\x92", "addsls r0, r1, #2"),
    (b"\x02\x00\x91\xa2", "addsge r0, r1, #2"),
    (b"\x02\x00\x91\xb2", "addslt r0, r1, #2"),
    (b"\x02\x00\x91\xc2", "addsgt r0, r1, #2"),
    (b"\x02\x00\x91\xd2", "addsle r0, r1, #2"),
    (b"\x02\x00\x91\xe2", "addsal r0, r1, #2"),

    (b"\x03\x00\x91\xe0", "adds r0, r1, r3"),
    (b"\x03\x00\x91\x00", "addseq r0, r1, r3"),
    (b"\x03\x00\x91\x10", "addsne r0, r1, r3"),
    (b"\x03\x00\x91\x20", "addscs r0, r1, r3"),
    (b"\x03\x00\x91\x30", "addscc r0, r1, r3"),
    (b"\x03\x00\x91\x40", "addsmi r0, r1, r3"),
    (b"\x03\x00\x91\x50", "addspl r0, r1, r3"),
    (b"\x03\x00\x91\x60", "addsvs r0, r1, r3"),
    (b"\x03\x00\x91\x70", "addsvc r0, r1, r3"),
    (b"\x03\x00\x91\x80", "addshi r0, r1, r3"),
    (b"\x03\x00\x91\x90", "addsls r0, r1, r3"),
    (b"\x03\x00\x91\xa0", "addsge r0, r1, r3"),
    (b"\x03\x00\x91\xb0", "addslt r0, r1, r3"),
    (b"\x03\x00\x91\xc0", "addsgt r0, r1, r3"),
    (b"\x03\x00\x91\xd0", "addsle r0, r1, r3"),
    (b"\x03\x00\x91\xe0", "addsal r0, r1, r3"),

    # ADDS - ASR Shifter
    (b"\x42\x02\x91\x00", "addseq r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x10", "addsne r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x20", "addscs r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x30", "addscc r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x40", "addsmi r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x50", "addspl r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x60", "addsvs r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x70", "addsvc r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x80", "addshi r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\x90", "addsls r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\xa0", "addsge r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\xb0", "addslt r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\xc0", "addsgt r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\xd0", "addsle r0, r1, r2, asr #4"),
    (b"\x42\x02\x91\xe0", "addsal r0, r1, r2, asr #4"),

    (b"\x52\x03\x91\x00", "addseq r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x10", "addsne r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x20", "addscs r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x30", "addscc r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x40", "addsmi r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x50", "addspl r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x60", "addsvs r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x70", "addsvc r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x80", "addshi r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\x90", "addsls r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\xa0", "addsge r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\xb0", "addslt r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\xc0", "addsgt r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\xd0", "addsle r0, r1, r2, asr r3"),
    (b"\x52\x03\x91\xe0", "addsal r0, r1, r2, asr r3"),

    # ADDS - LSL Shifter
    (b"\x02\x02\x91\x00", "addseq r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x10", "addsne r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x20", "addscs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x30", "addscc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x40", "addsmi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x50", "addspl r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x60", "addsvs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x70", "addsvc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x80", "addshi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\x90", "addsls r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\xa0", "addsge r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\xb0", "addslt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\xc0", "addsgt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\xd0", "addsle r0, r1, r2, lsl #4"),
    (b"\x02\x02\x91\xe0", "addsal r0, r1, r2, lsl #4"),

    (b"\x12\x03\x91\x00", "addseq r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x10", "addsne r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x20", "addscs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x30", "addscc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x40", "addsmi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x50", "addspl r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x60", "addsvs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x70", "addsvc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x80", "addshi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\x90", "addsls r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\xa0", "addsge r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\xb0", "addslt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\xc0", "addsgt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\xd0", "addsle r0, r1, r2, lsl r3"),
    (b"\x12\x03\x91\xe0", "addsal r0, r1, r2, lsl r3"),

    # ADDS - LSR Shifter
    (b"\x22\x02\x91\x00", "addseq r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x10", "addsne r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x20", "addscs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x30", "addscc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x40", "addsmi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x50", "addspl r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x60", "addsvs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x70", "addsvc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x80", "addshi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\x90", "addsls r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\xa0", "addsge r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\xb0", "addslt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\xc0", "addsgt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\xd0", "addsle r0, r1, r2, lsr #4"),
    (b"\x22\x02\x91\xe0", "addsal r0, r1, r2, lsr #4"),

    (b"\x32\x03\x91\x00", "addseq r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x10", "addsne r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x20", "addscs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x30", "addscc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x40", "addsmi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x50", "addspl r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x60", "addsvs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x70", "addsvc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x80", "addshi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\x90", "addsls r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\xa0", "addsge r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\xb0", "addslt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\xc0", "addsgt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\xd0", "addsle r0, r1, r2, lsr r3"),
    (b"\x32\x03\x91\xe0", "addsal r0, r1, r2, lsr r3"),

    # ADDS - ROR Shifter
    (b"\x62\x02\x91\x00", "addseq r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x10", "addsne r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x20", "addscs r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x30", "addscc r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x40", "addsmi r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x50", "addspl r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x60", "addsvs r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x70", "addsvc r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x80", "addshi r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\x90", "addsls r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\xa0", "addsge r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\xb0", "addslt r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\xc0", "addsgt r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\xd0", "addsle r0, r1, r2, ror #4"),
    (b"\x62\x02\x91\xe0", "addsal r0, r1, r2, ror #4"),

    (b"\x72\x03\x91\x00", "addseq r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x10", "addsne r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x20", "addscs r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x30", "addscc r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x40", "addsmi r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x50", "addspl r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x60", "addsvs r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x70", "addsvc r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x80", "addshi r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\x90", "addsls r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\xa0", "addsge r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\xb0", "addslt r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\xc0", "addsgt r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\xd0", "addsle r0, r1, r2, ror r3"),
    (b"\x72\x03\x91\xe0", "addsal r0, r1, r2, ror r3"),

    # ADDS - RRX Shifter
    (b"\x62\x00\x91\x00", "addseq r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x10", "addsne r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x20", "addscs r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x30", "addscc r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x40", "addsmi r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x50", "addspl r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x60", "addsvs r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x70", "addsvc r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x80", "addshi r0, r1, r2, rrx"),
    (b"\x62\x00\x91\x90", "addsls r0, r1, r2, rrx"),
    (b"\x62\x00\x91\xa0", "addsge r0, r1, r2, rrx"),
    (b"\x62\x00\x91\xb0", "addslt r0, r1, r2, rrx"),
    (b"\x62\x00\x91\xc0", "addsgt r0, r1, r2, rrx"),
    (b"\x62\x00\x91\xd0", "addsle r0, r1, r2, rrx"),
    (b"\x62\x00\x91\xe0", "addsal r0, r1, r2, rrx"),

    # ADD(S) misc
    (b"\x01\x00\x82\xe0", "add r0, r2, r1"),
    (b"\x01\x00\x81\xe0", "add r0, r1, r1"),
    (b"\x01\x10\x81\xe0", "add r1, r1, r1"),
    (b"\x11\x01\x82\xe0", "add r0, r2, r1, lsl r1"),
    (b"\x11\x01\x81\xe0", "add r0, r1, r1, lsl r1"),
    (b"\x11\x11\x81\xe0", "add r1, r1, r1, lsl r1"),
    (b"\xc1\x1f\x81\xe0", "add r1, r1, r1, asr #31"),
    (b"\x81\x1f\x81\xe0", "add r1, r1, r1, lsl #31"),
    (b"\xa1\x1f\x81\xe0", "add r1, r1, r1, lsr #31"),
    (b"\xe1\x1f\x81\xe0", "add r1, r1, r1, ror #31"),

    # ADD(S) with PC as operand ---------------------------------------------- #
    (b"\x0f\x00\x81\xe0", "add r0, r1, pc"),
    (b"\x02\x00\x8f\xe0", "add r0, pc, r2"),

    (b"\x4f\x01\x81\xe0", "add r0, r1, pc, asr #2"),
    (b"\x42\x01\x8f\xe0", "add r0, pc, r2, asr #2"),
    (b"\x0f\x01\x81\xe0", "add r0, r1, pc, lsl #2"),
    (b"\x02\x01\x8f\xe0", "add r0, pc, r2, lsl #2"),
    (b"\x2f\x01\x81\xe0", "add r0, r1, pc, lsr #2"),
    (b"\x22\x01\x8f\xe0", "add r0, pc, r2, lsr #2"),
    (b"\x6f\x01\x81\xe0", "add r0, r1, pc, ror #2"),
    (b"\x62\x01\x8f\xe0", "add r0, pc, r2, ror #2"),
    (b"\x6f\x00\x81\xe0", "add r0, r1, pc, rrx"),
    (b"\x62\x00\x8f\xe0", "add r0, pc, r2, rrx"),
    (b"\x5f\x03\x81\xe0", "add r0, r1, pc, asr r3"),
    (b"\x52\x03\x8f\xe0", "add r0, pc, r2, asr r3"),
    (b"\x1f\x03\x81\xe0", "add r0, r1, pc, lsl r3"),
    (b"\x12\x03\x8f\xe0", "add r0, pc, r2, lsl r3"),
    (b"\x3f\x03\x81\xe0", "add r0, r1, pc, lsr r3"),
    (b"\x32\x03\x8f\xe0", "add r0, pc, r2, lsr r3"),
    (b"\x7f\x03\x81\xe0", "add r0, r1, pc, ror r3"),
    (b"\x72\x03\x8f\xe0", "add r0, pc, r2, ror r3"),

    (b"\x4f\x01\x91\xe0", "adds r0, r1, pc, asr #2"),
    (b"\x42\x01\x9f\xe0", "adds r0, pc, r2, asr #2"),
    (b"\x0f\x01\x91\xe0", "adds r0, r1, pc, lsl #2"),
    (b"\x02\x01\x9f\xe0", "adds r0, pc, r2, lsl #2"),
    (b"\x2f\x01\x91\xe0", "adds r0, r1, pc, lsr #2"),
    (b"\x22\x01\x9f\xe0", "adds r0, pc, r2, lsr #2"),
    (b"\x6f\x01\x91\xe0", "adds r0, r1, pc, ror #2"),
    (b"\x62\x01\x9f\xe0", "adds r0, pc, r2, ror #2"),
    (b"\x6f\x00\x91\xe0", "adds r0, r1, pc, rrx"),
    (b"\x62\x00\x9f\xe0", "adds r0, pc, r2, rrx"),
    (b"\x5f\x03\x91\xe0", "adds r0, r1, pc, asr r3"),
    (b"\x52\x03\x9f\xe0", "adds r0, pc, r2, asr r3"),
    (b"\x1f\x03\x91\xe0", "adds r0, r1, pc, lsl r3"),
    (b"\x12\x03\x9f\xe0", "adds r0, pc, r2, lsl r3"),
    (b"\x3f\x03\x91\xe0", "adds r0, r1, pc, lsr r3"),
    (b"\x32\x03\x9f\xe0", "adds r0, pc, r2, lsr r3"),
    (b"\x7f\x03\x91\xe0", "adds r0, r1, pc, ror r3"),
    (b"\x72\x03\x9f\xe0", "adds r0, pc, r2, ror r3"),

    # ADD(S) with SP as operand ---------------------------------------------- #
    (b"\x02\x00\x9d\xe2", "adds r0, sp, #2"),
    (b"\x02\x00\x9d\x02", "addseq r0, sp, #2"),
    (b"\x02\x00\x9d\x12", "addsne r0, sp, #2"),
    (b"\x02\x00\x9d\x22", "addscs r0, sp, #2"),
    (b"\x02\x00\x9d\x32", "addscc r0, sp, #2"),
    (b"\x02\x00\x9d\x42", "addsmi r0, sp, #2"),
    (b"\x02\x00\x9d\x52", "addspl r0, sp, #2"),
    (b"\x02\x00\x9d\x62", "addsvs r0, sp, #2"),
    (b"\x02\x00\x9d\x72", "addsvc r0, sp, #2"),
    (b"\x02\x00\x9d\x82", "addshi r0, sp, #2"),
    (b"\x02\x00\x9d\x92", "addsls r0, sp, #2"),
    (b"\x02\x00\x9d\xa2", "addsge r0, sp, #2"),
    (b"\x02\x00\x9d\xb2", "addslt r0, sp, #2"),
    (b"\x02\x00\x9d\xc2", "addsgt r0, sp, #2"),
    (b"\x02\x00\x9d\xd2", "addsle r0, sp, #2"),
    (b"\x02\x00\x9d\xe2", "addsal r0, sp, #2"),

    (b"\x03\x00\x9d\xe0", "adds r0, sp, r3"),
    (b"\x03\x00\x9d\x00", "addseq r0, sp, r3"),
    (b"\x03\x00\x9d\x10", "addsne r0, sp, r3"),
    (b"\x03\x00\x9d\x20", "addscs r0, sp, r3"),
    (b"\x03\x00\x9d\x30", "addscc r0, sp, r3"),
    (b"\x03\x00\x9d\x40", "addsmi r0, sp, r3"),
    (b"\x03\x00\x9d\x50", "addspl r0, sp, r3"),
    (b"\x03\x00\x9d\x60", "addsvs r0, sp, r3"),
    (b"\x03\x00\x9d\x70", "addsvc r0, sp, r3"),
    (b"\x03\x00\x9d\x80", "addshi r0, sp, r3"),
    (b"\x03\x00\x9d\x90", "addsls r0, sp, r3"),
    (b"\x03\x00\x9d\xa0", "addsge r0, sp, r3"),
    (b"\x03\x00\x9d\xb0", "addslt r0, sp, r3"),
    (b"\x03\x00\x9d\xc0", "addsgt r0, sp, r3"),
    (b"\x03\x00\x9d\xd0", "addsle r0, sp, r3"),
    (b"\x03\x00\x9d\xe0", "addsal r0, sp, r3"),

    (b"\x02\xd0\x9d\xe2", "adds sp, sp, #2"),
    (b"\x02\xd0\x9d\x02", "addseq sp, sp, #2"),
    (b"\x02\xd0\x9d\x12", "addsne sp, sp, #2"),
    (b"\x02\xd0\x9d\x22", "addscs sp, sp, #2"),
    (b"\x02\xd0\x9d\x32", "addscc sp, sp, #2"),
    (b"\x02\xd0\x9d\x42", "addsmi sp, sp, #2"),
    (b"\x02\xd0\x9d\x52", "addspl sp, sp, #2"),
    (b"\x02\xd0\x9d\x62", "addsvs sp, sp, #2"),
    (b"\x02\xd0\x9d\x72", "addsvc sp, sp, #2"),
    (b"\x02\xd0\x9d\x82", "addshi sp, sp, #2"),
    (b"\x02\xd0\x9d\x92", "addsls sp, sp, #2"),
    (b"\x02\xd0\x9d\xa2", "addsge sp, sp, #2"),
    (b"\x02\xd0\x9d\xb2", "addslt sp, sp, #2"),
    (b"\x02\xd0\x9d\xc2", "addsgt sp, sp, #2"),
    (b"\x02\xd0\x9d\xd2", "addsle sp, sp, #2"),
    (b"\x02\xd0\x9d\xe2", "addsal sp, sp, #2"),

    (b"\x03\xd0\x9d\xe0", "adds sp, sp, r3"),
    (b"\x03\xd0\x9d\x00", "addseq sp, sp, r3"),
    (b"\x03\xd0\x9d\x10", "addsne sp, sp, r3"),
    (b"\x03\xd0\x9d\x20", "addscs sp, sp, r3"),
    (b"\x03\xd0\x9d\x30", "addscc sp, sp, r3"),
    (b"\x03\xd0\x9d\x40", "addsmi sp, sp, r3"),
    (b"\x03\xd0\x9d\x50", "addspl sp, sp, r3"),
    (b"\x03\xd0\x9d\x60", "addsvs sp, sp, r3"),
    (b"\x03\xd0\x9d\x70", "addsvc sp, sp, r3"),
    (b"\x03\xd0\x9d\x80", "addshi sp, sp, r3"),
    (b"\x03\xd0\x9d\x90", "addsls sp, sp, r3"),
    (b"\x03\xd0\x9d\xa0", "addsge sp, sp, r3"),
    (b"\x03\xd0\x9d\xb0", "addslt sp, sp, r3"),
    (b"\x03\xd0\x9d\xc0", "addsgt sp, sp, r3"),
    (b"\x03\xd0\x9d\xd0", "addsle sp, sp, r3"),
    (b"\x03\xd0\x9d\xe0", "addsal sp, sp, r3"),

    (b"\x1d\xdd\x8d\xe0", "add sp, sp, sp, lsl sp"),
    (b"\x1d\xdd\x9d\xe0", "adds sp, sp, sp, lsl sp"),
    (b"\x3d\xdd\x8d\xe0", "add sp, sp, sp, lsr sp"),
    (b"\x3d\xdd\x9d\xe0", "adds sp, sp, sp, lsr sp"),
    (b"\x5d\xdd\x8d\xe0", "add sp, sp, sp, asr sp"),
    (b"\x5d\xdd\x9d\xe0", "adds sp, sp, sp, asr sp"),
    (b"\x5d\xdd\x8d\xe0", "add sp, sp, sp, asr sp"),
    (b"\x5d\xdd\x9d\xe0", "adds sp, sp, sp, asr sp"),
    (b"\x7d\xdd\x8d\xe0", "add sp, sp, sp, ror sp"),
    (b"\x7d\xdd\x9d\xe0", "adds sp, sp, sp, ror sp"),
    (b"\x7d\xdd\x8d\xe0", "add sp, sp, sp, ror sp"),
    (b"\x7d\xdd\x9d\xe0", "adds sp, sp, sp, ror sp"),

    # AND -------------------------------------------------------------------- #
    (b"\x02\x00\x01\xe2", "and r0, r1, #2"),
    (b"\x02\x00\x01\x02", "andeq r0, r1, #2"),
    (b"\x02\x00\x01\x12", "andne r0, r1, #2"),
    (b"\x02\x00\x01\x22", "andcs r0, r1, #2"),
    (b"\x02\x00\x01\x32", "andcc r0, r1, #2"),
    (b"\x02\x00\x01\x42", "andmi r0, r1, #2"),
    (b"\x02\x00\x01\x52", "andpl r0, r1, #2"),
    (b"\x02\x00\x01\x62", "andvs r0, r1, #2"),
    (b"\x02\x00\x01\x72", "andvc r0, r1, #2"),
    (b"\x02\x00\x01\x82", "andhi r0, r1, #2"),
    (b"\x02\x00\x01\x92", "andls r0, r1, #2"),
    (b"\x02\x00\x01\xa2", "andge r0, r1, #2"),
    (b"\x02\x00\x01\xb2", "andlt r0, r1, #2"),
    (b"\x02\x00\x01\xc2", "andgt r0, r1, #2"),
    (b"\x02\x00\x01\xd2", "andle r0, r1, #2"),
    (b"\x02\x00\x01\xe2", "andal r0, r1, #2"),

    (b"\x03\x00\x01\xe0", "and r0, r1, r3"),
    (b"\x03\x00\x01\x00", "andeq r0, r1, r3"),
    (b"\x03\x00\x01\x10", "andne r0, r1, r3"),
    (b"\x03\x00\x01\x20", "andcs r0, r1, r3"),
    (b"\x03\x00\x01\x30", "andcc r0, r1, r3"),
    (b"\x03\x00\x01\x40", "andmi r0, r1, r3"),
    (b"\x03\x00\x01\x50", "andpl r0, r1, r3"),
    (b"\x03\x00\x01\x60", "andvs r0, r1, r3"),
    (b"\x03\x00\x01\x70", "andvc r0, r1, r3"),
    (b"\x03\x00\x01\x80", "andhi r0, r1, r3"),
    (b"\x03\x00\x01\x90", "andls r0, r1, r3"),
    (b"\x03\x00\x01\xa0", "andge r0, r1, r3"),
    (b"\x03\x00\x01\xb0", "andlt r0, r1, r3"),
    (b"\x03\x00\x01\xc0", "andgt r0, r1, r3"),
    (b"\x03\x00\x01\xd0", "andle r0, r1, r3"),

    # ANDS ------------------------------------------------------------------- #
    (b"\x02\x00\x11\xe2", "ands r0, r1, #2"),
    (b"\x02\x00\x11\x02", "andseq r0, r1, #2"),
    (b"\x02\x00\x11\x12", "andsne r0, r1, #2"),
    (b"\x02\x00\x11\x22", "andscs r0, r1, #2"),
    (b"\x02\x00\x11\x32", "andscc r0, r1, #2"),
    (b"\x02\x00\x11\x42", "andsmi r0, r1, #2"),
    (b"\x02\x00\x11\x52", "andspl r0, r1, #2"),
    (b"\x02\x00\x11\x62", "andsvs r0, r1, #2"),
    (b"\x02\x00\x11\x72", "andsvc r0, r1, #2"),
    (b"\x02\x00\x11\x82", "andshi r0, r1, #2"),
    (b"\x02\x00\x11\x92", "andsls r0, r1, #2"),
    (b"\x02\x00\x11\xa2", "andsge r0, r1, #2"),
    (b"\x02\x00\x11\xb2", "andslt r0, r1, #2"),
    (b"\x02\x00\x11\xc2", "andsgt r0, r1, #2"),
    (b"\x02\x00\x11\xd2", "andsle r0, r1, #2"),
    (b"\x02\x00\x11\xe2", "andsal r0, r1, #2"),

    (b"\x03\x00\x11\xe0", "ands r0, r1, r3"),
    (b"\x03\x00\x11\x00", "andseq r0, r1, r3"),
    (b"\x03\x00\x11\x10", "andsne r0, r1, r3"),
    (b"\x03\x00\x11\x20", "andscs r0, r1, r3"),
    (b"\x03\x00\x11\x30", "andscc r0, r1, r3"),
    (b"\x03\x00\x11\x40", "andsmi r0, r1, r3"),
    (b"\x03\x00\x11\x50", "andspl r0, r1, r3"),
    (b"\x03\x00\x11\x60", "andsvs r0, r1, r3"),
    (b"\x03\x00\x11\x70", "andsvc r0, r1, r3"),
    (b"\x03\x00\x11\x80", "andshi r0, r1, r3"),
    (b"\x03\x00\x11\x90", "andsls r0, r1, r3"),
    (b"\x03\x00\x11\xa0", "andsge r0, r1, r3"),
    (b"\x03\x00\x11\xb0", "andslt r0, r1, r3"),
    (b"\x03\x00\x11\xc0", "andsgt r0, r1, r3"),
    (b"\x03\x00\x11\xd0", "andsle r0, r1, r3"),

    # ASR -------------------------------------------------------------------- #
    (b"\x41\x01\xa0\xe1", "asr r0, r1, #2"),
    (b"\x41\x01\xa0\x01", "asreq r0, r1, #2"),
    (b"\x41\x01\xa0\x11", "asrne r0, r1, #2"),
    (b"\x41\x01\xa0\x21", "asrcs r0, r1, #2"),
    (b"\x41\x01\xa0\x31", "asrcc r0, r1, #2"),
    (b"\x41\x01\xa0\x41", "asrmi r0, r1, #2"),
    (b"\x41\x01\xa0\x51", "asrpl r0, r1, #2"),
    (b"\x41\x01\xa0\x61", "asrvs r0, r1, #2"),
    (b"\x41\x01\xa0\x71", "asrvc r0, r1, #2"),
    (b"\x41\x01\xa0\x81", "asrhi r0, r1, #2"),
    (b"\x41\x01\xa0\x91", "asrls r0, r1, #2"),
    (b"\x41\x01\xa0\xa1", "asrge r0, r1, #2"),
    (b"\x41\x01\xa0\xb1", "asrlt r0, r1, #2"),
    (b"\x41\x01\xa0\xc1", "asrgt r0, r1, #2"),
    (b"\x41\x01\xa0\xd1", "asrle r0, r1, #2"),
    (b"\x41\x01\xa0\xe1", "asral r0, r1, #2"),

    (b"\x51\x03\xa0\xe1", "asr r0, r1, r3"),
    (b"\x51\x03\xa0\x01", "asreq r0, r1, r3"),
    (b"\x51\x03\xa0\x11", "asrne r0, r1, r3"),
    (b"\x51\x03\xa0\x21", "asrcs r0, r1, r3"),
    (b"\x51\x03\xa0\x31", "asrcc r0, r1, r3"),
    (b"\x51\x03\xa0\x41", "asrmi r0, r1, r3"),
    (b"\x51\x03\xa0\x51", "asrpl r0, r1, r3"),
    (b"\x51\x03\xa0\x61", "asrvs r0, r1, r3"),
    (b"\x51\x03\xa0\x71", "asrvc r0, r1, r3"),
    (b"\x51\x03\xa0\x81", "asrhi r0, r1, r3"),
    (b"\x51\x03\xa0\x91", "asrls r0, r1, r3"),
    (b"\x51\x03\xa0\xa1", "asrge r0, r1, r3"),
    (b"\x51\x03\xa0\xb1", "asrlt r0, r1, r3"),
    (b"\x51\x03\xa0\xc1", "asrgt r0, r1, r3"),
    (b"\x51\x03\xa0\xd1", "asrle r0, r1, r3"),

    # # ASR(S) ----------------------------------------------------------------- #
    # # TODO: Fix flags.
    # (b"\x41\x01\xb0\xe1", "asrs r0, r1, #2"),
    # (b"\x41\x01\xb0\x01", "asrseq r0, r1, #2"),
    # (b"\x41\x01\xb0\x11", "asrsne r0, r1, #2"),
    # (b"\x41\x01\xb0\x21", "asrscs r0, r1, #2"),
    # (b"\x41\x01\xb0\x31", "asrscc r0, r1, #2"),
    # (b"\x41\x01\xb0\x41", "asrsmi r0, r1, #2"),
    # (b"\x41\x01\xb0\x51", "asrspl r0, r1, #2"),
    # (b"\x41\x01\xb0\x61", "asrsvs r0, r1, #2"),
    # (b"\x41\x01\xb0\x71", "asrsvc r0, r1, #2"),
    # (b"\x41\x01\xb0\x81", "asrshi r0, r1, #2"),
    # (b"\x41\x01\xb0\x91", "asrsls r0, r1, #2"),
    # (b"\x41\x01\xb0\xa1", "asrsge r0, r1, #2"),
    # (b"\x41\x01\xb0\xb1", "asrslt r0, r1, #2"),
    # (b"\x41\x01\xb0\xc1", "asrsgt r0, r1, #2"),
    # (b"\x41\x01\xb0\xd1", "asrsle r0, r1, #2"),
    # (b"\x41\x01\xb0\xe1", "asrsal r0, r1, #2"),

    # (b"\x51\x03\xb0\xe1", "asrs r0, r1, r3"),
    # (b"\x51\x03\xb0\x01", "asrseq r0, r1, r3"),
    # (b"\x51\x03\xb0\x11", "asrsne r0, r1, r3"),
    # (b"\x51\x03\xb0\x21", "asrscs r0, r1, r3"),
    # (b"\x51\x03\xb0\x31", "asrscc r0, r1, r3"),
    # (b"\x51\x03\xb0\x41", "asrsmi r0, r1, r3"),
    # (b"\x51\x03\xb0\x51", "asrspl r0, r1, r3"),
    # (b"\x51\x03\xb0\x61", "asrsvs r0, r1, r3"),
    # (b"\x51\x03\xb0\x71", "asrsvc r0, r1, r3"),
    # (b"\x51\x03\xb0\x81", "asrshi r0, r1, r3"),
    # (b"\x51\x03\xb0\x91", "asrsls r0, r1, r3"),
    # (b"\x51\x03\xb0\xa1", "asrsge r0, r1, r3"),
    # (b"\x51\x03\xb0\xb1", "asrslt r0, r1, r3"),
    # (b"\x51\x03\xb0\xc1", "asrsgt r0, r1, r3"),
    # (b"\x51\x03\xb0\xd1", "asrsle r0, r1, r3"),

    # CLZ -------------------------------------------------------------------- #
    (b"\x11\x0f\x6f\x01", "clzeq r0, r1"),
    (b"\x11\x0f\x6f\x11", "clzne r0, r1"),
    (b"\x11\x0f\x6f\x21", "clzcs r0, r1"),
    (b"\x11\x0f\x6f\x31", "clzcc r0, r1"),
    (b"\x11\x0f\x6f\x41", "clzmi r0, r1"),
    (b"\x11\x0f\x6f\x51", "clzpl r0, r1"),
    (b"\x11\x0f\x6f\x61", "clzvs r0, r1"),
    (b"\x11\x0f\x6f\x71", "clzvc r0, r1"),
    (b"\x11\x0f\x6f\x81", "clzhi r0, r1"),
    (b"\x11\x0f\x6f\x91", "clzls r0, r1"),
    (b"\x11\x0f\x6f\xa1", "clzge r0, r1"),
    (b"\x11\x0f\x6f\xb1", "clzlt r0, r1"),
    (b"\x11\x0f\x6f\xc1", "clzgt r0, r1"),
    (b"\x11\x0f\x6f\xd1", "clzle r0, r1"),
    (b"\x11\x0f\x6f\xe1", "clzal r0, r1"),

    # CMP -------------------------------------------------------------------- #
    (b"\x01\x00\x50\x01", "cmpeq r0, r1"),
    (b"\x01\x00\x50\x11", "cmpne r0, r1"),
    (b"\x01\x00\x50\x21", "cmpcs r0, r1"),
    (b"\x01\x00\x50\x31", "cmpcc r0, r1"),
    (b"\x01\x00\x50\x41", "cmpmi r0, r1"),
    (b"\x01\x00\x50\x51", "cmppl r0, r1"),
    (b"\x01\x00\x50\x61", "cmpvs r0, r1"),
    (b"\x01\x00\x50\x71", "cmpvc r0, r1"),
    (b"\x01\x00\x50\x81", "cmphi r0, r1"),
    (b"\x01\x00\x50\x91", "cmpls r0, r1"),
    (b"\x01\x00\x50\xa1", "cmpge r0, r1"),
    (b"\x01\x00\x50\xb1", "cmplt r0, r1"),
    (b"\x01\x00\x50\xc1", "cmpgt r0, r1"),
    (b"\x01\x00\x50\xd1", "cmple r0, r1"),
    (b"\x01\x00\x50\xe1", "cmpal r0, r1"),

    (b"\x04\x00\x50\x03", "cmpeq r0, #4"),
    (b"\x04\x00\x50\x13", "cmpne r0, #4"),
    (b"\x04\x00\x50\x23", "cmpcs r0, #4"),
    (b"\x04\x00\x50\x33", "cmpcc r0, #4"),
    (b"\x04\x00\x50\x43", "cmpmi r0, #4"),
    (b"\x04\x00\x50\x53", "cmppl r0, #4"),
    (b"\x04\x00\x50\x63", "cmpvs r0, #4"),
    (b"\x04\x00\x50\x73", "cmpvc r0, #4"),
    (b"\x04\x00\x50\x83", "cmphi r0, #4"),
    (b"\x04\x00\x50\x93", "cmpls r0, #4"),
    (b"\x04\x00\x50\xa3", "cmpge r0, #4"),
    (b"\x04\x00\x50\xb3", "cmplt r0, #4"),
    (b"\x04\x00\x50\xc3", "cmpgt r0, #4"),
    (b"\x04\x00\x50\xd3", "cmple r0, #4"),
    (b"\x04\x00\x50\xe3", "cmpal r0, #4"),

    (b"\x41\x02\x50\x01", "cmpeq r0, r1, asr #4"),
    (b"\x41\x02\x50\x11", "cmpne r0, r1, asr #4"),
    (b"\x41\x02\x50\x21", "cmpcs r0, r1, asr #4"),
    (b"\x41\x02\x50\x31", "cmpcc r0, r1, asr #4"),
    (b"\x41\x02\x50\x41", "cmpmi r0, r1, asr #4"),
    (b"\x41\x02\x50\x51", "cmppl r0, r1, asr #4"),
    (b"\x41\x02\x50\x61", "cmpvs r0, r1, asr #4"),
    (b"\x41\x02\x50\x71", "cmpvc r0, r1, asr #4"),
    (b"\x41\x02\x50\x81", "cmphi r0, r1, asr #4"),
    (b"\x41\x02\x50\x91", "cmpls r0, r1, asr #4"),
    (b"\x41\x02\x50\xa1", "cmpge r0, r1, asr #4"),
    (b"\x41\x02\x50\xb1", "cmplt r0, r1, asr #4"),
    (b"\x41\x02\x50\xc1", "cmpgt r0, r1, asr #4"),
    (b"\x41\x02\x50\xd1", "cmple r0, r1, asr #4"),
    (b"\x41\x02\x50\xe1", "cmpal r0, r1, asr #4"),

    (b"\x51\x03\x50\x01", "cmpeq r0, r1, asr r3"),
    (b"\x51\x03\x50\x11", "cmpne r0, r1, asr r3"),
    (b"\x51\x03\x50\x21", "cmpcs r0, r1, asr r3"),
    (b"\x51\x03\x50\x31", "cmpcc r0, r1, asr r3"),
    (b"\x51\x03\x50\x41", "cmpmi r0, r1, asr r3"),
    (b"\x51\x03\x50\x51", "cmppl r0, r1, asr r3"),
    (b"\x51\x03\x50\x61", "cmpvs r0, r1, asr r3"),
    (b"\x51\x03\x50\x71", "cmpvc r0, r1, asr r3"),
    (b"\x51\x03\x50\x81", "cmphi r0, r1, asr r3"),
    (b"\x51\x03\x50\x91", "cmpls r0, r1, asr r3"),
    (b"\x51\x03\x50\xa1", "cmpge r0, r1, asr r3"),
    (b"\x51\x03\x50\xb1", "cmplt r0, r1, asr r3"),
    (b"\x51\x03\x50\xc1", "cmpgt r0, r1, asr r3"),
    (b"\x51\x03\x50\xd1", "cmple r0, r1, asr r3"),
    (b"\x51\x03\x50\xe1", "cmpal r0, r1, asr r3"),

    (b"\x01\x02\x50\x01", "cmpeq r0, r1, lsl #4"),
    (b"\x01\x02\x50\x11", "cmpne r0, r1, lsl #4"),
    (b"\x01\x02\x50\x21", "cmpcs r0, r1, lsl #4"),
    (b"\x01\x02\x50\x31", "cmpcc r0, r1, lsl #4"),
    (b"\x01\x02\x50\x41", "cmpmi r0, r1, lsl #4"),
    (b"\x01\x02\x50\x51", "cmppl r0, r1, lsl #4"),
    (b"\x01\x02\x50\x61", "cmpvs r0, r1, lsl #4"),
    (b"\x01\x02\x50\x71", "cmpvc r0, r1, lsl #4"),
    (b"\x01\x02\x50\x81", "cmphi r0, r1, lsl #4"),
    (b"\x01\x02\x50\x91", "cmpls r0, r1, lsl #4"),
    (b"\x01\x02\x50\xa1", "cmpge r0, r1, lsl #4"),
    (b"\x01\x02\x50\xb1", "cmplt r0, r1, lsl #4"),
    (b"\x01\x02\x50\xc1", "cmpgt r0, r1, lsl #4"),
    (b"\x01\x02\x50\xd1", "cmple r0, r1, lsl #4"),
    (b"\x01\x02\x50\xe1", "cmpal r0, r1, lsl #4"),

    (b"\x11\x03\x50\x01", "cmpeq r0, r1, lsl r3"),
    (b"\x11\x03\x50\x11", "cmpne r0, r1, lsl r3"),
    (b"\x11\x03\x50\x21", "cmpcs r0, r1, lsl r3"),
    (b"\x11\x03\x50\x31", "cmpcc r0, r1, lsl r3"),
    (b"\x11\x03\x50\x41", "cmpmi r0, r1, lsl r3"),
    (b"\x11\x03\x50\x51", "cmppl r0, r1, lsl r3"),
    (b"\x11\x03\x50\x61", "cmpvs r0, r1, lsl r3"),
    (b"\x11\x03\x50\x71", "cmpvc r0, r1, lsl r3"),
    (b"\x11\x03\x50\x81", "cmphi r0, r1, lsl r3"),
    (b"\x11\x03\x50\x91", "cmpls r0, r1, lsl r3"),
    (b"\x11\x03\x50\xa1", "cmpge r0, r1, lsl r3"),
    (b"\x11\x03\x50\xb1", "cmplt r0, r1, lsl r3"),
    (b"\x11\x03\x50\xc1", "cmpgt r0, r1, lsl r3"),
    (b"\x11\x03\x50\xd1", "cmple r0, r1, lsl r3"),
    (b"\x11\x03\x50\xe1", "cmpal r0, r1, lsl r3"),

    (b"\x21\x02\x50\x01", "cmpeq r0, r1, lsr #4"),
    (b"\x21\x02\x50\x11", "cmpne r0, r1, lsr #4"),
    (b"\x21\x02\x50\x21", "cmpcs r0, r1, lsr #4"),
    (b"\x21\x02\x50\x31", "cmpcc r0, r1, lsr #4"),
    (b"\x21\x02\x50\x41", "cmpmi r0, r1, lsr #4"),
    (b"\x21\x02\x50\x51", "cmppl r0, r1, lsr #4"),
    (b"\x21\x02\x50\x61", "cmpvs r0, r1, lsr #4"),
    (b"\x21\x02\x50\x71", "cmpvc r0, r1, lsr #4"),
    (b"\x21\x02\x50\x81", "cmphi r0, r1, lsr #4"),
    (b"\x21\x02\x50\x91", "cmpls r0, r1, lsr #4"),
    (b"\x21\x02\x50\xa1", "cmpge r0, r1, lsr #4"),
    (b"\x21\x02\x50\xb1", "cmplt r0, r1, lsr #4"),
    (b"\x21\x02\x50\xc1", "cmpgt r0, r1, lsr #4"),
    (b"\x21\x02\x50\xd1", "cmple r0, r1, lsr #4"),
    (b"\x21\x02\x50\xe1", "cmpal r0, r1, lsr #4"),

    (b"\x31\x03\x50\x01", "cmpeq r0, r1, lsr r3"),
    (b"\x31\x03\x50\x11", "cmpne r0, r1, lsr r3"),
    (b"\x31\x03\x50\x21", "cmpcs r0, r1, lsr r3"),
    (b"\x31\x03\x50\x31", "cmpcc r0, r1, lsr r3"),
    (b"\x31\x03\x50\x41", "cmpmi r0, r1, lsr r3"),
    (b"\x31\x03\x50\x51", "cmppl r0, r1, lsr r3"),
    (b"\x31\x03\x50\x61", "cmpvs r0, r1, lsr r3"),
    (b"\x31\x03\x50\x71", "cmpvc r0, r1, lsr r3"),
    (b"\x31\x03\x50\x81", "cmphi r0, r1, lsr r3"),
    (b"\x31\x03\x50\x91", "cmpls r0, r1, lsr r3"),
    (b"\x31\x03\x50\xa1", "cmpge r0, r1, lsr r3"),
    (b"\x31\x03\x50\xb1", "cmplt r0, r1, lsr r3"),
    (b"\x31\x03\x50\xc1", "cmpgt r0, r1, lsr r3"),
    (b"\x31\x03\x50\xd1", "cmple r0, r1, lsr r3"),
    (b"\x31\x03\x50\xe1", "cmpal r0, r1, lsr r3"),

    (b"\x61\x02\x50\x01", "cmpeq r0, r1, ror #4"),
    (b"\x61\x02\x50\x11", "cmpne r0, r1, ror #4"),
    (b"\x61\x02\x50\x21", "cmpcs r0, r1, ror #4"),
    (b"\x61\x02\x50\x31", "cmpcc r0, r1, ror #4"),
    (b"\x61\x02\x50\x41", "cmpmi r0, r1, ror #4"),
    (b"\x61\x02\x50\x51", "cmppl r0, r1, ror #4"),
    (b"\x61\x02\x50\x61", "cmpvs r0, r1, ror #4"),
    (b"\x61\x02\x50\x71", "cmpvc r0, r1, ror #4"),
    (b"\x61\x02\x50\x81", "cmphi r0, r1, ror #4"),
    (b"\x61\x02\x50\x91", "cmpls r0, r1, ror #4"),
    (b"\x61\x02\x50\xa1", "cmpge r0, r1, ror #4"),
    (b"\x61\x02\x50\xb1", "cmplt r0, r1, ror #4"),
    (b"\x61\x02\x50\xc1", "cmpgt r0, r1, ror #4"),
    (b"\x61\x02\x50\xd1", "cmple r0, r1, ror #4"),
    (b"\x61\x02\x50\xe1", "cmpal r0, r1, ror #4"),

    (b"\x71\x03\x50\x01", "cmpeq r0, r1, ror r3"),
    (b"\x71\x03\x50\x11", "cmpne r0, r1, ror r3"),
    (b"\x71\x03\x50\x21", "cmpcs r0, r1, ror r3"),
    (b"\x71\x03\x50\x31", "cmpcc r0, r1, ror r3"),
    (b"\x71\x03\x50\x41", "cmpmi r0, r1, ror r3"),
    (b"\x71\x03\x50\x51", "cmppl r0, r1, ror r3"),
    (b"\x71\x03\x50\x61", "cmpvs r0, r1, ror r3"),
    (b"\x71\x03\x50\x71", "cmpvc r0, r1, ror r3"),
    (b"\x71\x03\x50\x81", "cmphi r0, r1, ror r3"),
    (b"\x71\x03\x50\x91", "cmpls r0, r1, ror r3"),
    (b"\x71\x03\x50\xa1", "cmpge r0, r1, ror r3"),
    (b"\x71\x03\x50\xb1", "cmplt r0, r1, ror r3"),
    (b"\x71\x03\x50\xc1", "cmpgt r0, r1, ror r3"),
    (b"\x71\x03\x50\xd1", "cmple r0, r1, ror r3"),
    (b"\x71\x03\x50\xe1", "cmpal r0, r1, ror r3"),

    (b"\x61\x00\x50\x01", "cmpeq r0, r1, rrx"),
    (b"\x61\x00\x50\x11", "cmpne r0, r1, rrx"),
    (b"\x61\x00\x50\x21", "cmpcs r0, r1, rrx"),
    (b"\x61\x00\x50\x31", "cmpcc r0, r1, rrx"),
    (b"\x61\x00\x50\x41", "cmpmi r0, r1, rrx"),
    (b"\x61\x00\x50\x51", "cmppl r0, r1, rrx"),
    (b"\x61\x00\x50\x61", "cmpvs r0, r1, rrx"),
    (b"\x61\x00\x50\x71", "cmpvc r0, r1, rrx"),
    (b"\x61\x00\x50\x81", "cmphi r0, r1, rrx"),
    (b"\x61\x00\x50\x91", "cmpls r0, r1, rrx"),
    (b"\x61\x00\x50\xa1", "cmpge r0, r1, rrx"),
    (b"\x61\x00\x50\xb1", "cmplt r0, r1, rrx"),
    (b"\x61\x00\x50\xc1", "cmpgt r0, r1, rrx"),
    (b"\x61\x00\x50\xd1", "cmple r0, r1, rrx"),
    (b"\x61\x00\x50\xe1", "cmpal r0, r1, rrx"),

    # EOR -------------------------------------------------------------------- #
    (b"\x02\x00\x21\xe2", "eor r0, r1, #2"),
    (b"\x02\x00\x21\x02", "eoreq r0, r1, #2"),
    (b"\x02\x00\x21\x12", "eorne r0, r1, #2"),
    (b"\x02\x00\x21\x22", "eorcs r0, r1, #2"),
    (b"\x02\x00\x21\x32", "eorcc r0, r1, #2"),
    (b"\x02\x00\x21\x42", "eormi r0, r1, #2"),
    (b"\x02\x00\x21\x52", "eorpl r0, r1, #2"),
    (b"\x02\x00\x21\x62", "eorvs r0, r1, #2"),
    (b"\x02\x00\x21\x72", "eorvc r0, r1, #2"),
    (b"\x02\x00\x21\x82", "eorhi r0, r1, #2"),
    (b"\x02\x00\x21\x92", "eorls r0, r1, #2"),
    (b"\x02\x00\x21\xa2", "eorge r0, r1, #2"),
    (b"\x02\x00\x21\xb2", "eorlt r0, r1, #2"),
    (b"\x02\x00\x21\xc2", "eorgt r0, r1, #2"),
    (b"\x02\x00\x21\xd2", "eorle r0, r1, #2"),
    (b"\x02\x00\x21\xe2", "eoral r0, r1, #2"),

    (b"\x03\x00\x21\xe0", "eor r0, r1, r3"),
    (b"\x03\x00\x21\x00", "eoreq r0, r1, r3"),
    (b"\x03\x00\x21\x10", "eorne r0, r1, r3"),
    (b"\x03\x00\x21\x20", "eorcs r0, r1, r3"),
    (b"\x03\x00\x21\x30", "eorcc r0, r1, r3"),
    (b"\x03\x00\x21\x40", "eormi r0, r1, r3"),
    (b"\x03\x00\x21\x50", "eorpl r0, r1, r3"),
    (b"\x03\x00\x21\x60", "eorvs r0, r1, r3"),
    (b"\x03\x00\x21\x70", "eorvc r0, r1, r3"),
    (b"\x03\x00\x21\x80", "eorhi r0, r1, r3"),
    (b"\x03\x00\x21\x90", "eorls r0, r1, r3"),
    (b"\x03\x00\x21\xa0", "eorge r0, r1, r3"),
    (b"\x03\x00\x21\xb0", "eorlt r0, r1, r3"),
    (b"\x03\x00\x21\xc0", "eorgt r0, r1, r3"),
    (b"\x03\x00\x21\xd0", "eorle r0, r1, r3"),
    (b"\x03\x00\x21\xe0", "eoral r0, r1, r3"),

    # EOR(s) ----------------------------------------------------------------- #
    (b"\x02\x00\x31\xe2", "eors r0, r1, #2"),
    (b"\x02\x00\x31\x02", "eorseq r0, r1, #2"),
    (b"\x02\x00\x31\x12", "eorsne r0, r1, #2"),
    (b"\x02\x00\x31\x22", "eorscs r0, r1, #2"),
    (b"\x02\x00\x31\x32", "eorscc r0, r1, #2"),
    (b"\x02\x00\x31\x42", "eorsmi r0, r1, #2"),
    (b"\x02\x00\x31\x52", "eorspl r0, r1, #2"),
    (b"\x02\x00\x31\x62", "eorsvs r0, r1, #2"),
    (b"\x02\x00\x31\x72", "eorsvc r0, r1, #2"),
    (b"\x02\x00\x31\x82", "eorshi r0, r1, #2"),
    (b"\x02\x00\x31\x92", "eorsls r0, r1, #2"),
    (b"\x02\x00\x31\xa2", "eorsge r0, r1, #2"),
    (b"\x02\x00\x31\xb2", "eorslt r0, r1, #2"),
    (b"\x02\x00\x31\xc2", "eorsgt r0, r1, #2"),
    (b"\x02\x00\x31\xd2", "eorsle r0, r1, #2"),
    (b"\x02\x00\x31\xe2", "eorsal r0, r1, #2"),

    (b"\x03\x00\x31\xe0", "eors r0, r1, r3"),
    (b"\x03\x00\x31\x00", "eorseq r0, r1, r3"),
    (b"\x03\x00\x31\x10", "eorsne r0, r1, r3"),
    (b"\x03\x00\x31\x20", "eorscs r0, r1, r3"),
    (b"\x03\x00\x31\x30", "eorscc r0, r1, r3"),
    (b"\x03\x00\x31\x40", "eorsmi r0, r1, r3"),
    (b"\x03\x00\x31\x50", "eorspl r0, r1, r3"),
    (b"\x03\x00\x31\x60", "eorsvs r0, r1, r3"),
    (b"\x03\x00\x31\x70", "eorsvc r0, r1, r3"),
    (b"\x03\x00\x31\x80", "eorshi r0, r1, r3"),
    (b"\x03\x00\x31\x90", "eorsls r0, r1, r3"),
    (b"\x03\x00\x31\xa0", "eorsge r0, r1, r3"),
    (b"\x03\x00\x31\xb0", "eorslt r0, r1, r3"),
    (b"\x03\x00\x31\xc0", "eorsgt r0, r1, r3"),
    (b"\x03\x00\x31\xd0", "eorsle r0, r1, r3"),
    (b"\x03\x00\x31\xe0", "eorsal r0, r1, r3"),

    # LSL -------------------------------------------------------------------- #
    (b"\x01\x01\xa0\xe1", "lsl r0, r1, #2"),
    (b"\x01\x01\xa0\x01", "lsleq r0, r1, #2"),
    (b"\x01\x01\xa0\x11", "lslne r0, r1, #2"),
    (b"\x01\x01\xa0\x21", "lslcs r0, r1, #2"),
    (b"\x01\x01\xa0\x31", "lslcc r0, r1, #2"),
    (b"\x01\x01\xa0\x41", "lslmi r0, r1, #2"),
    (b"\x01\x01\xa0\x51", "lslpl r0, r1, #2"),
    (b"\x01\x01\xa0\x61", "lslvs r0, r1, #2"),
    (b"\x01\x01\xa0\x71", "lslvc r0, r1, #2"),
    (b"\x01\x01\xa0\x81", "lslhi r0, r1, #2"),
    (b"\x01\x01\xa0\x91", "lslls r0, r1, #2"),
    (b"\x01\x01\xa0\xa1", "lslge r0, r1, #2"),
    (b"\x01\x01\xa0\xb1", "lsllt r0, r1, #2"),
    (b"\x01\x01\xa0\xc1", "lslgt r0, r1, #2"),
    (b"\x01\x01\xa0\xd1", "lslle r0, r1, #2"),
    (b"\x01\x01\xa0\xe1", "lslal r0, r1, #2"),

    (b"\x11\x03\xa0\xe1", "lsl r0, r1, r3"),
    (b"\x11\x03\xa0\x01", "lsleq r0, r1, r3"),
    (b"\x11\x03\xa0\x11", "lslne r0, r1, r3"),
    (b"\x11\x03\xa0\x21", "lslcs r0, r1, r3"),
    (b"\x11\x03\xa0\x31", "lslcc r0, r1, r3"),
    (b"\x11\x03\xa0\x41", "lslmi r0, r1, r3"),
    (b"\x11\x03\xa0\x51", "lslpl r0, r1, r3"),
    (b"\x11\x03\xa0\x61", "lslvs r0, r1, r3"),
    (b"\x11\x03\xa0\x71", "lslvc r0, r1, r3"),
    (b"\x11\x03\xa0\x81", "lslhi r0, r1, r3"),
    (b"\x11\x03\xa0\x91", "lslls r0, r1, r3"),
    (b"\x11\x03\xa0\xa1", "lslge r0, r1, r3"),
    (b"\x11\x03\xa0\xb1", "lsllt r0, r1, r3"),
    (b"\x11\x03\xa0\xc1", "lslgt r0, r1, r3"),
    (b"\x11\x03\xa0\xd1", "lslle r0, r1, r3"),

    # TODO: Test with PC and SP as operands (both destination and source).
    # NOTE: MOV (shifted register) is a pseudo-instruction for ASR, LSL, LSR,
    # ROR, and RRX.
    # MOV -------------------------------------------------------------------- #
    (b"\x02\x00\xa0\xe3", "mov r0, #2"),
    (b"\x02\x00\xa0\x03", "moveq r0, #2"),
    (b"\x02\x00\xa0\x13", "movne r0, #2"),
    (b"\x02\x00\xa0\x23", "movcs r0, #2"),
    (b"\x02\x00\xa0\x33", "movcc r0, #2"),
    (b"\x02\x00\xa0\x43", "movmi r0, #2"),
    (b"\x02\x00\xa0\x53", "movpl r0, #2"),
    (b"\x02\x00\xa0\x63", "movvs r0, #2"),
    (b"\x02\x00\xa0\x73", "movvc r0, #2"),
    (b"\x02\x00\xa0\x83", "movhi r0, #2"),
    (b"\x02\x00\xa0\x93", "movls r0, #2"),
    (b"\x02\x00\xa0\xa3", "movge r0, #2"),
    (b"\x02\x00\xa0\xb3", "movlt r0, #2"),
    (b"\x02\x00\xa0\xc3", "movgt r0, #2"),
    (b"\x02\x00\xa0\xd3", "movle r0, #2"),
    (b"\x02\x00\xa0\xe3", "moval r0, #2"),

    (b"\x03\x00\xa0\xe1", "mov r0, r3"),
    (b"\x03\x00\xa0\x01", "moveq r0, r3"),
    (b"\x03\x00\xa0\x11", "movne r0, r3"),
    (b"\x03\x00\xa0\x21", "movcs r0, r3"),
    (b"\x03\x00\xa0\x31", "movcc r0, r3"),
    (b"\x03\x00\xa0\x41", "movmi r0, r3"),
    (b"\x03\x00\xa0\x51", "movpl r0, r3"),
    (b"\x03\x00\xa0\x61", "movvs r0, r3"),
    (b"\x03\x00\xa0\x71", "movvc r0, r3"),
    (b"\x03\x00\xa0\x81", "movhi r0, r3"),
    (b"\x03\x00\xa0\x91", "movls r0, r3"),
    (b"\x03\x00\xa0\xa1", "movge r0, r3"),
    (b"\x03\x00\xa0\xb1", "movlt r0, r3"),
    (b"\x03\x00\xa0\xc1", "movgt r0, r3"),
    (b"\x03\x00\xa0\xd1", "movle r0, r3"),
    (b"\x03\x00\xa0\xe1", "moval r0, r3"),

    (b"\x02\x00\xb0\xe3", "movs r0, #2"),
    (b"\x02\x00\xb0\x03", "movseq r0, #2"),
    (b"\x02\x00\xb0\x13", "movsne r0, #2"),
    (b"\x02\x00\xb0\x23", "movscs r0, #2"),
    (b"\x02\x00\xb0\x33", "movscc r0, #2"),
    (b"\x02\x00\xb0\x43", "movsmi r0, #2"),
    (b"\x02\x00\xb0\x53", "movspl r0, #2"),
    (b"\x02\x00\xb0\x63", "movsvs r0, #2"),
    (b"\x02\x00\xb0\x73", "movsvc r0, #2"),
    (b"\x02\x00\xb0\x83", "movshi r0, #2"),
    (b"\x02\x00\xb0\x93", "movsls r0, #2"),
    (b"\x02\x00\xb0\xa3", "movsge r0, #2"),
    (b"\x02\x00\xb0\xb3", "movslt r0, #2"),
    (b"\x02\x00\xb0\xc3", "movsgt r0, #2"),
    (b"\x02\x00\xb0\xd3", "movsle r0, #2"),
    (b"\x02\x00\xb0\xe3", "movsal r0, #2"),

    (b"\x03\x00\xb0\xe1", "movs r0, r3"),
    (b"\x03\x00\xb0\x01", "movseq r0, r3"),
    (b"\x03\x00\xb0\x11", "movsne r0, r3"),
    (b"\x03\x00\xb0\x21", "movscs r0, r3"),
    (b"\x03\x00\xb0\x31", "movscc r0, r3"),
    (b"\x03\x00\xb0\x41", "movsmi r0, r3"),
    (b"\x03\x00\xb0\x51", "movspl r0, r3"),
    (b"\x03\x00\xb0\x61", "movsvs r0, r3"),
    (b"\x03\x00\xb0\x71", "movsvc r0, r3"),
    (b"\x03\x00\xb0\x81", "movshi r0, r3"),
    (b"\x03\x00\xb0\x91", "movsls r0, r3"),
    (b"\x03\x00\xb0\xa1", "movsge r0, r3"),
    (b"\x03\x00\xb0\xb1", "movslt r0, r3"),
    (b"\x03\x00\xb0\xc1", "movsgt r0, r3"),
    (b"\x03\x00\xb0\xd1", "movsle r0, r3"),
    (b"\x03\x00\xb0\xe1", "movsal r0, r3"),

    # MOV(S) with SP as operand ---------------------------------------------- #
    (b"\x02\xd0\xa0\xe3", "mov sp, #2"),
    (b"\x02\xd0\xa0\x03", "moveq sp, #2"),
    (b"\x02\xd0\xa0\x13", "movne sp, #2"),
    (b"\x02\xd0\xa0\x23", "movcs sp, #2"),
    (b"\x02\xd0\xa0\x33", "movcc sp, #2"),
    (b"\x02\xd0\xa0\x43", "movmi sp, #2"),
    (b"\x02\xd0\xa0\x53", "movpl sp, #2"),
    (b"\x02\xd0\xa0\x63", "movvs sp, #2"),
    (b"\x02\xd0\xa0\x73", "movvc sp, #2"),
    (b"\x02\xd0\xa0\x83", "movhi sp, #2"),
    (b"\x02\xd0\xa0\x93", "movls sp, #2"),
    (b"\x02\xd0\xa0\xa3", "movge sp, #2"),
    (b"\x02\xd0\xa0\xb3", "movlt sp, #2"),
    (b"\x02\xd0\xa0\xc3", "movgt sp, #2"),
    (b"\x02\xd0\xa0\xd3", "movle sp, #2"),
    (b"\x02\xd0\xa0\xe3", "moval sp, #2"),

    (b"\x03\xd0\xa0\xe1", "mov sp, r3"),
    (b"\x03\xd0\xa0\x01", "moveq sp, r3"),
    (b"\x03\xd0\xa0\x11", "movne sp, r3"),
    (b"\x03\xd0\xa0\x21", "movcs sp, r3"),
    (b"\x03\xd0\xa0\x31", "movcc sp, r3"),
    (b"\x03\xd0\xa0\x41", "movmi sp, r3"),
    (b"\x03\xd0\xa0\x51", "movpl sp, r3"),
    (b"\x03\xd0\xa0\x61", "movvs sp, r3"),
    (b"\x03\xd0\xa0\x71", "movvc sp, r3"),
    (b"\x03\xd0\xa0\x81", "movhi sp, r3"),
    (b"\x03\xd0\xa0\x91", "movls sp, r3"),
    (b"\x03\xd0\xa0\xa1", "movge sp, r3"),
    (b"\x03\xd0\xa0\xb1", "movlt sp, r3"),
    (b"\x03\xd0\xa0\xc1", "movgt sp, r3"),
    (b"\x03\xd0\xa0\xd1", "movle sp, r3"),
    (b"\x03\xd0\xa0\xe1", "moval sp, r3"),

    (b"\x02\xd0\xb0\xe3", "movs sp, #2"),
    (b"\x02\xd0\xb0\x03", "movseq sp, #2"),
    (b"\x02\xd0\xb0\x13", "movsne sp, #2"),
    (b"\x02\xd0\xb0\x23", "movscs sp, #2"),
    (b"\x02\xd0\xb0\x33", "movscc sp, #2"),
    (b"\x02\xd0\xb0\x43", "movsmi sp, #2"),
    (b"\x02\xd0\xb0\x53", "movspl sp, #2"),
    (b"\x02\xd0\xb0\x63", "movsvs sp, #2"),
    (b"\x02\xd0\xb0\x73", "movsvc sp, #2"),
    (b"\x02\xd0\xb0\x83", "movshi sp, #2"),
    (b"\x02\xd0\xb0\x93", "movsls sp, #2"),
    (b"\x02\xd0\xb0\xa3", "movsge sp, #2"),
    (b"\x02\xd0\xb0\xb3", "movslt sp, #2"),
    (b"\x02\xd0\xb0\xc3", "movsgt sp, #2"),
    (b"\x02\xd0\xb0\xd3", "movsle sp, #2"),
    (b"\x02\xd0\xb0\xe3", "movsal sp, #2"),

    (b"\x03\xd0\xb0\xe1", "movs sp, r3"),
    (b"\x03\xd0\xb0\x01", "movseq sp, r3"),
    (b"\x03\xd0\xb0\x11", "movsne sp, r3"),
    (b"\x03\xd0\xb0\x21", "movscs sp, r3"),
    (b"\x03\xd0\xb0\x31", "movscc sp, r3"),
    (b"\x03\xd0\xb0\x41", "movsmi sp, r3"),
    (b"\x03\xd0\xb0\x51", "movspl sp, r3"),
    (b"\x03\xd0\xb0\x61", "movsvs sp, r3"),
    (b"\x03\xd0\xb0\x71", "movsvc sp, r3"),
    (b"\x03\xd0\xb0\x81", "movshi sp, r3"),
    (b"\x03\xd0\xb0\x91", "movsls sp, r3"),
    (b"\x03\xd0\xb0\xa1", "movsge sp, r3"),
    (b"\x03\xd0\xb0\xb1", "movslt sp, r3"),
    (b"\x03\xd0\xb0\xc1", "movsgt sp, r3"),
    (b"\x03\xd0\xb0\xd1", "movsle sp, r3"),
    (b"\x03\xd0\xb0\xe1", "movsal sp, r3"),

    # MUL -------------------------------------------------------------------- #
    (b"\x91\x03\x00\xe0", "mul r0, r1, r3"),
    (b"\x91\x03\x00\x00", "muleq r0, r1, r3"),
    (b"\x91\x03\x00\x10", "mulne r0, r1, r3"),
    (b"\x91\x03\x00\x20", "mulcs r0, r1, r3"),
    (b"\x91\x03\x00\x30", "mulcc r0, r1, r3"),
    (b"\x91\x03\x00\x40", "mulmi r0, r1, r3"),
    (b"\x91\x03\x00\x50", "mulpl r0, r1, r3"),
    (b"\x91\x03\x00\x60", "mulvs r0, r1, r3"),
    (b"\x91\x03\x00\x70", "mulvc r0, r1, r3"),
    (b"\x91\x03\x00\x80", "mulhi r0, r1, r3"),
    (b"\x91\x03\x00\x90", "mulls r0, r1, r3"),
    (b"\x91\x03\x00\xa0", "mulge r0, r1, r3"),
    (b"\x91\x03\x00\xb0", "mullt r0, r1, r3"),
    (b"\x91\x03\x00\xc0", "mulgt r0, r1, r3"),
    (b"\x91\x03\x00\xd0", "mulle r0, r1, r3"),
    (b"\x91\x03\x00\xe0", "mulal r0, r1, r3"),

    (b"\x91\x03\x10\xe0", "muls r0, r1, r3"),
    (b"\x91\x03\x10\x00", "mulseq r0, r1, r3"),
    (b"\x91\x03\x10\x10", "mulsne r0, r1, r3"),
    (b"\x91\x03\x10\x20", "mulscs r0, r1, r3"),
    (b"\x91\x03\x10\x30", "mulscc r0, r1, r3"),
    (b"\x91\x03\x10\x40", "mulsmi r0, r1, r3"),
    (b"\x91\x03\x10\x50", "mulspl r0, r1, r3"),
    (b"\x91\x03\x10\x60", "mulsvs r0, r1, r3"),
    (b"\x91\x03\x10\x70", "mulsvc r0, r1, r3"),
    (b"\x91\x03\x10\x80", "mulshi r0, r1, r3"),
    (b"\x91\x03\x10\x90", "mulsls r0, r1, r3"),
    (b"\x91\x03\x10\xa0", "mulsge r0, r1, r3"),
    (b"\x91\x03\x10\xb0", "mulslt r0, r1, r3"),
    (b"\x91\x03\x10\xc0", "mulsgt r0, r1, r3"),
    (b"\x91\x03\x10\xd0", "mulsle r0, r1, r3"),
    (b"\x91\x03\x10\xe0", "mulsal r0, r1, r3"),

    # MVN -------------------------------------------------------------------- #
    (b"\x02\x00\xe0\xe3", "mvn r0, #2"),
    (b"\x02\x00\xe0\x03", "mvneq r0, #2"),
    (b"\x02\x00\xe0\x13", "mvnne r0, #2"),
    (b"\x02\x00\xe0\x23", "mvncs r0, #2"),
    (b"\x02\x00\xe0\x33", "mvncc r0, #2"),
    (b"\x02\x00\xe0\x43", "mvnmi r0, #2"),
    (b"\x02\x00\xe0\x53", "mvnpl r0, #2"),
    (b"\x02\x00\xe0\x63", "mvnvs r0, #2"),
    (b"\x02\x00\xe0\x73", "mvnvc r0, #2"),
    (b"\x02\x00\xe0\x83", "mvnhi r0, #2"),
    (b"\x02\x00\xe0\x93", "mvnls r0, #2"),
    (b"\x02\x00\xe0\xa3", "mvnge r0, #2"),
    (b"\x02\x00\xe0\xb3", "mvnlt r0, #2"),
    (b"\x02\x00\xe0\xc3", "mvngt r0, #2"),
    (b"\x02\x00\xe0\xd3", "mvnle r0, #2"),
    (b"\x02\x00\xe0\xe3", "mvnal r0, #2"),

    (b"\x03\x00\xe0\xe1", "mvn r0, r3"),
    (b"\x03\x00\xe0\x01", "mvneq r0, r3"),
    (b"\x03\x00\xe0\x11", "mvnne r0, r3"),
    (b"\x03\x00\xe0\x21", "mvncs r0, r3"),
    (b"\x03\x00\xe0\x31", "mvncc r0, r3"),
    (b"\x03\x00\xe0\x41", "mvnmi r0, r3"),
    (b"\x03\x00\xe0\x51", "mvnpl r0, r3"),
    (b"\x03\x00\xe0\x61", "mvnvs r0, r3"),
    (b"\x03\x00\xe0\x71", "mvnvc r0, r3"),
    (b"\x03\x00\xe0\x81", "mvnhi r0, r3"),
    (b"\x03\x00\xe0\x91", "mvnls r0, r3"),
    (b"\x03\x00\xe0\xa1", "mvnge r0, r3"),
    (b"\x03\x00\xe0\xb1", "mvnlt r0, r3"),
    (b"\x03\x00\xe0\xc1", "mvngt r0, r3"),
    (b"\x03\x00\xe0\xd1", "mvnle r0, r3"),
    (b"\x03\x00\xe0\xe1", "mvnal r0, r3"),

    # MVNS ------------------------------------------------------------------- #
    (b"\x02\x00\xf0\xe3", "mvns r0, #2"),
    (b"\x02\x00\xf0\x03", "mvnseq r0, #2"),
    (b"\x02\x00\xf0\x13", "mvnsne r0, #2"),
    (b"\x02\x00\xf0\x23", "mvnscs r0, #2"),
    (b"\x02\x00\xf0\x33", "mvnscc r0, #2"),
    (b"\x02\x00\xf0\x43", "mvnsmi r0, #2"),
    (b"\x02\x00\xf0\x53", "mvnspl r0, #2"),
    (b"\x02\x00\xf0\x63", "mvnsvs r0, #2"),
    (b"\x02\x00\xf0\x73", "mvnsvc r0, #2"),
    (b"\x02\x00\xf0\x83", "mvnshi r0, #2"),
    (b"\x02\x00\xf0\x93", "mvnsls r0, #2"),
    (b"\x02\x00\xf0\xa3", "mvnsge r0, #2"),
    (b"\x02\x00\xf0\xb3", "mvnslt r0, #2"),
    (b"\x02\x00\xf0\xc3", "mvnsgt r0, #2"),
    (b"\x02\x00\xf0\xd3", "mvnsle r0, #2"),
    (b"\x02\x00\xf0\xe3", "mvnsal r0, #2"),

    (b"\x03\x00\xf0\xe1", "mvns r0, r3"),
    (b"\x03\x00\xf0\x01", "mvnseq r0, r3"),
    (b"\x03\x00\xf0\x11", "mvnsne r0, r3"),
    (b"\x03\x00\xf0\x21", "mvnscs r0, r3"),
    (b"\x03\x00\xf0\x31", "mvnscc r0, r3"),
    (b"\x03\x00\xf0\x41", "mvnsmi r0, r3"),
    (b"\x03\x00\xf0\x51", "mvnspl r0, r3"),
    (b"\x03\x00\xf0\x61", "mvnsvs r0, r3"),
    (b"\x03\x00\xf0\x71", "mvnsvc r0, r3"),
    (b"\x03\x00\xf0\x81", "mvnshi r0, r3"),
    (b"\x03\x00\xf0\x91", "mvnsls r0, r3"),
    (b"\x03\x00\xf0\xa1", "mvnsge r0, r3"),
    (b"\x03\x00\xf0\xb1", "mvnslt r0, r3"),
    (b"\x03\x00\xf0\xc1", "mvnsgt r0, r3"),
    (b"\x03\x00\xf0\xd1", "mvnsle r0, r3"),
    (b"\x03\x00\xf0\xe1", "mvnsal r0, r3"),

    # ORR -------------------------------------------------------------------- #
    (b"\x02\x00\x81\xe3", "orr r0, r1, #2"),
    (b"\x02\x00\x81\x03", "orreq r0, r1, #2"),
    (b"\x02\x00\x81\x13", "orrne r0, r1, #2"),
    (b"\x02\x00\x81\x23", "orrcs r0, r1, #2"),
    (b"\x02\x00\x81\x33", "orrcc r0, r1, #2"),
    (b"\x02\x00\x81\x43", "orrmi r0, r1, #2"),
    (b"\x02\x00\x81\x53", "orrpl r0, r1, #2"),
    (b"\x02\x00\x81\x63", "orrvs r0, r1, #2"),
    (b"\x02\x00\x81\x73", "orrvc r0, r1, #2"),
    (b"\x02\x00\x81\x83", "orrhi r0, r1, #2"),
    (b"\x02\x00\x81\x93", "orrls r0, r1, #2"),
    (b"\x02\x00\x81\xa3", "orrge r0, r1, #2"),
    (b"\x02\x00\x81\xb3", "orrlt r0, r1, #2"),
    (b"\x02\x00\x81\xc3", "orrgt r0, r1, #2"),
    (b"\x02\x00\x81\xd3", "orrle r0, r1, #2"),
    (b"\x02\x00\x81\xe3", "orral r0, r1, #2"),

    (b"\x03\x00\x81\xe1", "orr r0, r1, r3"),
    (b"\x03\x00\x81\x01", "orreq r0, r1, r3"),
    (b"\x03\x00\x81\x11", "orrne r0, r1, r3"),
    (b"\x03\x00\x81\x21", "orrcs r0, r1, r3"),
    (b"\x03\x00\x81\x31", "orrcc r0, r1, r3"),
    (b"\x03\x00\x81\x41", "orrmi r0, r1, r3"),
    (b"\x03\x00\x81\x51", "orrpl r0, r1, r3"),
    (b"\x03\x00\x81\x61", "orrvs r0, r1, r3"),
    (b"\x03\x00\x81\x71", "orrvc r0, r1, r3"),
    (b"\x03\x00\x81\x81", "orrhi r0, r1, r3"),
    (b"\x03\x00\x81\x91", "orrls r0, r1, r3"),
    (b"\x03\x00\x81\xa1", "orrge r0, r1, r3"),
    (b"\x03\x00\x81\xb1", "orrlt r0, r1, r3"),
    (b"\x03\x00\x81\xc1", "orrgt r0, r1, r3"),
    (b"\x03\x00\x81\xd1", "orrle r0, r1, r3"),
    (b"\x03\x00\x81\xe1", "orral r0, r1, r3"),

    # RSB -------------------------------------------------------------------- #
    (b"\x02\x00\x61\xe2", "rsb r0, r1, #2"),
    (b"\x02\x00\x61\x02", "rsbeq r0, r1, #2"),
    (b"\x02\x00\x61\x12", "rsbne r0, r1, #2"),
    (b"\x02\x00\x61\x22", "rsbcs r0, r1, #2"),
    (b"\x02\x00\x61\x32", "rsbcc r0, r1, #2"),
    (b"\x02\x00\x61\x42", "rsbmi r0, r1, #2"),
    (b"\x02\x00\x61\x52", "rsbpl r0, r1, #2"),
    (b"\x02\x00\x61\x62", "rsbvs r0, r1, #2"),
    (b"\x02\x00\x61\x72", "rsbvc r0, r1, #2"),
    (b"\x02\x00\x61\x82", "rsbhi r0, r1, #2"),
    (b"\x02\x00\x61\x92", "rsbls r0, r1, #2"),
    (b"\x02\x00\x61\xa2", "rsbge r0, r1, #2"),
    (b"\x02\x00\x61\xb2", "rsblt r0, r1, #2"),
    (b"\x02\x00\x61\xc2", "rsbgt r0, r1, #2"),
    (b"\x02\x00\x61\xd2", "rsble r0, r1, #2"),
    (b"\x02\x00\x61\xe2", "rsbal r0, r1, #2"),

    (b"\x03\x00\x61\xe0", "rsb r0, r1, r3"),
    (b"\x03\x00\x61\x00", "rsbeq r0, r1, r3"),
    (b"\x03\x00\x61\x10", "rsbne r0, r1, r3"),
    (b"\x03\x00\x61\x20", "rsbcs r0, r1, r3"),
    (b"\x03\x00\x61\x30", "rsbcc r0, r1, r3"),
    (b"\x03\x00\x61\x40", "rsbmi r0, r1, r3"),
    (b"\x03\x00\x61\x50", "rsbpl r0, r1, r3"),
    (b"\x03\x00\x61\x60", "rsbvs r0, r1, r3"),
    (b"\x03\x00\x61\x70", "rsbvc r0, r1, r3"),
    (b"\x03\x00\x61\x80", "rsbhi r0, r1, r3"),
    (b"\x03\x00\x61\x90", "rsbls r0, r1, r3"),
    (b"\x03\x00\x61\xa0", "rsbge r0, r1, r3"),
    (b"\x03\x00\x61\xb0", "rsblt r0, r1, r3"),
    (b"\x03\x00\x61\xc0", "rsbgt r0, r1, r3"),
    (b"\x03\x00\x61\xd0", "rsble r0, r1, r3"),
    (b"\x03\x00\x61\xe0", "rsbal r0, r1, r3"),

    # RSC -------------------------------------------------------------------- #
    (b"\x02\x00\xe1\xe2", "rsc r0, r1, #2"),
    (b"\x02\x00\xe1\x02", "rsceq r0, r1, #2"),
    (b"\x02\x00\xe1\x12", "rscne r0, r1, #2"),
    (b"\x02\x00\xe1\x22", "rsccs r0, r1, #2"),
    (b"\x02\x00\xe1\x32", "rsccc r0, r1, #2"),
    (b"\x02\x00\xe1\x42", "rscmi r0, r1, #2"),
    (b"\x02\x00\xe1\x52", "rscpl r0, r1, #2"),
    (b"\x02\x00\xe1\x62", "rscvs r0, r1, #2"),
    (b"\x02\x00\xe1\x72", "rscvc r0, r1, #2"),
    (b"\x02\x00\xe1\x82", "rschi r0, r1, #2"),
    (b"\x02\x00\xe1\x92", "rscls r0, r1, #2"),
    (b"\x02\x00\xe1\xa2", "rscge r0, r1, #2"),
    (b"\x02\x00\xe1\xb2", "rsclt r0, r1, #2"),
    (b"\x02\x00\xe1\xc2", "rscgt r0, r1, #2"),
    (b"\x02\x00\xe1\xd2", "rscle r0, r1, #2"),
    (b"\x02\x00\xe1\xe2", "rscal r0, r1, #2"),

    (b"\x03\x00\xe1\xe0", "rsc r0, r1, r3"),
    (b"\x03\x00\xe1\x00", "rsceq r0, r1, r3"),
    (b"\x03\x00\xe1\x10", "rscne r0, r1, r3"),
    (b"\x03\x00\xe1\x20", "rsccs r0, r1, r3"),
    (b"\x03\x00\xe1\x30", "rsccc r0, r1, r3"),
    (b"\x03\x00\xe1\x40", "rscmi r0, r1, r3"),
    (b"\x03\x00\xe1\x50", "rscpl r0, r1, r3"),
    (b"\x03\x00\xe1\x60", "rscvs r0, r1, r3"),
    (b"\x03\x00\xe1\x70", "rscvc r0, r1, r3"),
    (b"\x03\x00\xe1\x80", "rschi r0, r1, r3"),
    (b"\x03\x00\xe1\x90", "rscls r0, r1, r3"),
    (b"\x03\x00\xe1\xa0", "rscge r0, r1, r3"),
    (b"\x03\x00\xe1\xb0", "rsclt r0, r1, r3"),
    (b"\x03\x00\xe1\xc0", "rscgt r0, r1, r3"),
    (b"\x03\x00\xe1\xd0", "rscle r0, r1, r3"),
    (b"\x03\x00\xe1\xe0", "rscal r0, r1, r3"),

    # RSCS ------------------------------------------------------------------- #
    (b"\x02\x00\xf1\xe2", "rscs r0, r1, #2"),
    (b"\x02\x00\xf1\x02", "rscseq r0, r1, #2"),
    (b"\x02\x00\xf1\x12", "rscsne r0, r1, #2"),
    (b"\x02\x00\xf1\x22", "rscscs r0, r1, #2"),
    (b"\x02\x00\xf1\x32", "rscscc r0, r1, #2"),
    (b"\x02\x00\xf1\x42", "rscsmi r0, r1, #2"),
    (b"\x02\x00\xf1\x52", "rscspl r0, r1, #2"),
    (b"\x02\x00\xf1\x62", "rscsvs r0, r1, #2"),
    (b"\x02\x00\xf1\x72", "rscsvc r0, r1, #2"),
    (b"\x02\x00\xf1\x82", "rscshi r0, r1, #2"),
    (b"\x02\x00\xf1\x92", "rscsls r0, r1, #2"),
    (b"\x02\x00\xf1\xa2", "rscsge r0, r1, #2"),
    (b"\x02\x00\xf1\xb2", "rscslt r0, r1, #2"),
    (b"\x02\x00\xf1\xc2", "rscsgt r0, r1, #2"),
    (b"\x02\x00\xf1\xd2", "rscsle r0, r1, #2"),
    (b"\x02\x00\xf1\xe2", "rscsal r0, r1, #2"),

    (b"\x03\x00\xf1\xe0", "rscs r0, r1, r3"),
    (b"\x03\x00\xf1\x00", "rscseq r0, r1, r3"),
    (b"\x03\x00\xf1\x10", "rscsne r0, r1, r3"),
    (b"\x03\x00\xf1\x20", "rscscs r0, r1, r3"),
    (b"\x03\x00\xf1\x30", "rscscc r0, r1, r3"),
    (b"\x03\x00\xf1\x40", "rscsmi r0, r1, r3"),
    (b"\x03\x00\xf1\x50", "rscspl r0, r1, r3"),
    (b"\x03\x00\xf1\x60", "rscsvs r0, r1, r3"),
    (b"\x03\x00\xf1\x70", "rscsvc r0, r1, r3"),
    (b"\x03\x00\xf1\x80", "rscshi r0, r1, r3"),
    (b"\x03\x00\xf1\x90", "rscsls r0, r1, r3"),
    (b"\x03\x00\xf1\xa0", "rscsge r0, r1, r3"),
    (b"\x03\x00\xf1\xb0", "rscslt r0, r1, r3"),
    (b"\x03\x00\xf1\xc0", "rscsgt r0, r1, r3"),
    (b"\x03\x00\xf1\xd0", "rscsle r0, r1, r3"),
    (b"\x03\x00\xf1\xe0", "rscsal r0, r1, r3"),

    # SBC -------------------------------------------------------------------- #
    (b"\x02\x00\xc1\xe2", "sbc r0, r1, #2"),
    (b"\x02\x00\xc1\x02", "sbceq r0, r1, #2"),
    (b"\x02\x00\xc1\x12", "sbcne r0, r1, #2"),
    (b"\x02\x00\xc1\x22", "sbccs r0, r1, #2"),
    (b"\x02\x00\xc1\x32", "sbccc r0, r1, #2"),
    (b"\x02\x00\xc1\x42", "sbcmi r0, r1, #2"),
    (b"\x02\x00\xc1\x52", "sbcpl r0, r1, #2"),
    (b"\x02\x00\xc1\x62", "sbcvs r0, r1, #2"),
    (b"\x02\x00\xc1\x72", "sbcvc r0, r1, #2"),
    (b"\x02\x00\xc1\x82", "sbchi r0, r1, #2"),
    (b"\x02\x00\xc1\x92", "sbcls r0, r1, #2"),
    (b"\x02\x00\xc1\xa2", "sbcge r0, r1, #2"),
    (b"\x02\x00\xc1\xb2", "sbclt r0, r1, #2"),
    (b"\x02\x00\xc1\xc2", "sbcgt r0, r1, #2"),
    (b"\x02\x00\xc1\xd2", "sbcle r0, r1, #2"),
    (b"\x02\x00\xc1\xe2", "sbcal r0, r1, #2"),

    (b"\x03\x00\xc1\xe0", "sbc r0, r1, r3"),
    (b"\x03\x00\xc1\x00", "sbceq r0, r1, r3"),
    (b"\x03\x00\xc1\x10", "sbcne r0, r1, r3"),
    (b"\x03\x00\xc1\x20", "sbccs r0, r1, r3"),
    (b"\x03\x00\xc1\x30", "sbccc r0, r1, r3"),
    (b"\x03\x00\xc1\x40", "sbcmi r0, r1, r3"),
    (b"\x03\x00\xc1\x50", "sbcpl r0, r1, r3"),
    (b"\x03\x00\xc1\x60", "sbcvs r0, r1, r3"),
    (b"\x03\x00\xc1\x70", "sbcvc r0, r1, r3"),
    (b"\x03\x00\xc1\x80", "sbchi r0, r1, r3"),
    (b"\x03\x00\xc1\x90", "sbcls r0, r1, r3"),
    (b"\x03\x00\xc1\xa0", "sbcge r0, r1, r3"),
    (b"\x03\x00\xc1\xb0", "sbclt r0, r1, r3"),
    (b"\x03\x00\xc1\xc0", "sbcgt r0, r1, r3"),
    (b"\x03\x00\xc1\xd0", "sbcle r0, r1, r3"),
    (b"\x03\x00\xc1\xe0", "sbcal r0, r1, r3"),

    # SBCS ------------------------------------------------------------------- #
    (b"\x02\x00\xd1\xe2", "sbcs r0, r1, #2"),
    (b"\x02\x00\xd1\x02", "sbcseq r0, r1, #2"),
    (b"\x02\x00\xd1\x12", "sbcsne r0, r1, #2"),
    (b"\x02\x00\xd1\x22", "sbcscs r0, r1, #2"),
    (b"\x02\x00\xd1\x32", "sbcscc r0, r1, #2"),
    (b"\x02\x00\xd1\x42", "sbcsmi r0, r1, #2"),
    (b"\x02\x00\xd1\x52", "sbcspl r0, r1, #2"),
    (b"\x02\x00\xd1\x62", "sbcsvs r0, r1, #2"),
    (b"\x02\x00\xd1\x72", "sbcsvc r0, r1, #2"),
    (b"\x02\x00\xd1\x82", "sbcshi r0, r1, #2"),
    (b"\x02\x00\xd1\x92", "sbcsls r0, r1, #2"),
    (b"\x02\x00\xd1\xa2", "sbcsge r0, r1, #2"),
    (b"\x02\x00\xd1\xb2", "sbcslt r0, r1, #2"),
    (b"\x02\x00\xd1\xc2", "sbcsgt r0, r1, #2"),
    (b"\x02\x00\xd1\xd2", "sbcsle r0, r1, #2"),
    (b"\x02\x00\xd1\xe2", "sbcsal r0, r1, #2"),

    (b"\x03\x00\xd1\xe0", "sbcs r0, r1, r3"),
    (b"\x03\x00\xd1\x00", "sbcseq r0, r1, r3"),
    (b"\x03\x00\xd1\x10", "sbcsne r0, r1, r3"),
    (b"\x03\x00\xd1\x20", "sbcscs r0, r1, r3"),
    (b"\x03\x00\xd1\x30", "sbcscc r0, r1, r3"),
    (b"\x03\x00\xd1\x40", "sbcsmi r0, r1, r3"),
    (b"\x03\x00\xd1\x50", "sbcspl r0, r1, r3"),
    (b"\x03\x00\xd1\x60", "sbcsvs r0, r1, r3"),
    (b"\x03\x00\xd1\x70", "sbcsvc r0, r1, r3"),
    (b"\x03\x00\xd1\x80", "sbcshi r0, r1, r3"),
    (b"\x03\x00\xd1\x90", "sbcsls r0, r1, r3"),
    (b"\x03\x00\xd1\xa0", "sbcsge r0, r1, r3"),
    (b"\x03\x00\xd1\xb0", "sbcslt r0, r1, r3"),
    (b"\x03\x00\xd1\xc0", "sbcsgt r0, r1, r3"),
    (b"\x03\x00\xd1\xd0", "sbcsle r0, r1, r3"),
    (b"\x03\x00\xd1\xe0", "sbcsal r0, r1, r3"),

    # SMULL ------------------------------------------------------------------ #
    (b"\x92\x03\xc1\xe0", "smull r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x00", "smulleq r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x10", "smullne r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x20", "smullcs r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x30", "smullcc r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x40", "smullmi r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x50", "smullpl r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x60", "smullvs r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x70", "smullvc r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x80", "smullhi r0, r1, r2, r3"),
    (b"\x92\x03\xc1\x90", "smullls r0, r1, r2, r3"),
    (b"\x92\x03\xc1\xa0", "smullge r0, r1, r2, r3"),
    (b"\x92\x03\xc1\xb0", "smulllt r0, r1, r2, r3"),
    (b"\x92\x03\xc1\xc0", "smullgt r0, r1, r2, r3"),
    (b"\x92\x03\xc1\xd0", "smullle r0, r1, r2, r3"),

    # SMULLS ----------------------------------------------------------------- #
    (b"\x92\x03\xd1\xe0", "smulls r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x00", "smullseq r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x10", "smullsne r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x20", "smullscs r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x30", "smullscc r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x40", "smullsmi r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x50", "smullspl r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x60", "smullsvs r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x70", "smullsvc r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x80", "smullshi r0, r1, r2, r3"),
    (b"\x92\x03\xd1\x90", "smullsls r0, r1, r2, r3"),
    (b"\x92\x03\xd1\xa0", "smullsge r0, r1, r2, r3"),
    (b"\x92\x03\xd1\xb0", "smullslt r0, r1, r2, r3"),
    (b"\x92\x03\xd1\xc0", "smullsgt r0, r1, r2, r3"),
    (b"\x92\x03\xd1\xd0", "smullsle r0, r1, r2, r3"),

    # SUB -------------------------------------------------------------------- #
    (b"\x02\x00\x41\xe2", "sub r0, r1, #2"),
    (b"\x02\x00\x41\x02", "subeq r0, r1, #2"),
    (b"\x02\x00\x41\x12", "subne r0, r1, #2"),
    (b"\x02\x00\x41\x22", "subcs r0, r1, #2"),
    (b"\x02\x00\x41\x32", "subcc r0, r1, #2"),
    (b"\x02\x00\x41\x42", "submi r0, r1, #2"),
    (b"\x02\x00\x41\x52", "subpl r0, r1, #2"),
    (b"\x02\x00\x41\x62", "subvs r0, r1, #2"),
    (b"\x02\x00\x41\x72", "subvc r0, r1, #2"),
    (b"\x02\x00\x41\x82", "subhi r0, r1, #2"),
    (b"\x02\x00\x41\x92", "subls r0, r1, #2"),
    (b"\x02\x00\x41\xa2", "subge r0, r1, #2"),
    (b"\x02\x00\x41\xb2", "sublt r0, r1, #2"),
    (b"\x02\x00\x41\xc2", "subgt r0, r1, #2"),
    (b"\x02\x00\x41\xd2", "suble r0, r1, #2"),
    (b"\x02\x00\x41\xe2", "subal r0, r1, #2"),

    (b"\x03\x00\x41\xe0", "sub r0, r1, r3"),
    (b"\x03\x00\x41\x00", "subeq r0, r1, r3"),
    (b"\x03\x00\x41\x10", "subne r0, r1, r3"),
    (b"\x03\x00\x41\x20", "subcs r0, r1, r3"),
    (b"\x03\x00\x41\x30", "subcc r0, r1, r3"),
    (b"\x03\x00\x41\x40", "submi r0, r1, r3"),
    (b"\x03\x00\x41\x50", "subpl r0, r1, r3"),
    (b"\x03\x00\x41\x60", "subvs r0, r1, r3"),
    (b"\x03\x00\x41\x70", "subvc r0, r1, r3"),
    (b"\x03\x00\x41\x80", "subhi r0, r1, r3"),
    (b"\x03\x00\x41\x90", "subls r0, r1, r3"),
    (b"\x03\x00\x41\xa0", "subge r0, r1, r3"),
    (b"\x03\x00\x41\xb0", "sublt r0, r1, r3"),
    (b"\x03\x00\x41\xc0", "subgt r0, r1, r3"),
    (b"\x03\x00\x41\xd0", "suble r0, r1, r3"),
    (b"\x03\x00\x41\xe0", "subal r0, r1, r3"),

    (b"\x42\x02\x41\x00", "subeq r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x10", "subne r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x20", "subcs r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x30", "subcc r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x40", "submi r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x50", "subpl r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x60", "subvs r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x70", "subvc r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x80", "subhi r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\x90", "subls r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\xa0", "subge r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\xb0", "sublt r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\xc0", "subgt r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\xd0", "suble r0, r1, r2, asr #4"),
    (b"\x42\x02\x41\xe0", "subal r0, r1, r2, asr #4"),

    (b"\x52\x03\x41\x00", "subeq r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x10", "subne r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x20", "subcs r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x30", "subcc r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x40", "submi r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x50", "subpl r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x60", "subvs r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x70", "subvc r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x80", "subhi r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\x90", "subls r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\xa0", "subge r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\xb0", "sublt r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\xc0", "subgt r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\xd0", "suble r0, r1, r2, asr r3"),
    (b"\x52\x03\x41\xe0", "subal r0, r1, r2, asr r3"),

    (b"\x02\x02\x41\x00", "subeq r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x10", "subne r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x20", "subcs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x30", "subcc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x40", "submi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x50", "subpl r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x60", "subvs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x70", "subvc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x80", "subhi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\x90", "subls r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\xa0", "subge r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\xb0", "sublt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\xc0", "subgt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\xd0", "suble r0, r1, r2, lsl #4"),
    (b"\x02\x02\x41\xe0", "subal r0, r1, r2, lsl #4"),

    (b"\x12\x03\x41\x00", "subeq r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x10", "subne r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x20", "subcs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x30", "subcc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x40", "submi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x50", "subpl r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x60", "subvs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x70", "subvc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x80", "subhi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\x90", "subls r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\xa0", "subge r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\xb0", "sublt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\xc0", "subgt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\xd0", "suble r0, r1, r2, lsl r3"),
    (b"\x12\x03\x41\xe0", "subal r0, r1, r2, lsl r3"),

    (b"\x22\x02\x41\x00", "subeq r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x10", "subne r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x20", "subcs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x30", "subcc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x40", "submi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x50", "subpl r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x60", "subvs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x70", "subvc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x80", "subhi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\x90", "subls r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\xa0", "subge r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\xb0", "sublt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\xc0", "subgt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\xd0", "suble r0, r1, r2, lsr #4"),
    (b"\x22\x02\x41\xe0", "subal r0, r1, r2, lsr #4"),

    (b"\x32\x03\x41\x00", "subeq r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x10", "subne r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x20", "subcs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x30", "subcc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x40", "submi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x50", "subpl r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x60", "subvs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x70", "subvc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x80", "subhi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\x90", "subls r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\xa0", "subge r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\xb0", "sublt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\xc0", "subgt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\xd0", "suble r0, r1, r2, lsr r3"),
    (b"\x32\x03\x41\xe0", "subal r0, r1, r2, lsr r3"),

    (b"\x62\x02\x41\x00", "subeq r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x10", "subne r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x20", "subcs r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x30", "subcc r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x40", "submi r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x50", "subpl r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x60", "subvs r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x70", "subvc r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x80", "subhi r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\x90", "subls r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\xa0", "subge r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\xb0", "sublt r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\xc0", "subgt r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\xd0", "suble r0, r1, r2, ror #4"),
    (b"\x62\x02\x41\xe0", "subal r0, r1, r2, ror #4"),

    (b"\x72\x03\x41\x00", "subeq r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x10", "subne r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x20", "subcs r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x30", "subcc r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x40", "submi r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x50", "subpl r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x60", "subvs r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x70", "subvc r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x80", "subhi r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\x90", "subls r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\xa0", "subge r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\xb0", "sublt r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\xc0", "subgt r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\xd0", "suble r0, r1, r2, ror r3"),
    (b"\x72\x03\x41\xe0", "subal r0, r1, r2, ror r3"),

    (b"\x62\x00\x41\x00", "subeq r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x10", "subne r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x20", "subcs r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x30", "subcc r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x40", "submi r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x50", "subpl r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x60", "subvs r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x70", "subvc r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x80", "subhi r0, r1, r2, rrx"),
    (b"\x62\x00\x41\x90", "subls r0, r1, r2, rrx"),
    (b"\x62\x00\x41\xa0", "subge r0, r1, r2, rrx"),
    (b"\x62\x00\x41\xb0", "sublt r0, r1, r2, rrx"),
    (b"\x62\x00\x41\xc0", "subgt r0, r1, r2, rrx"),
    (b"\x62\x00\x41\xd0", "suble r0, r1, r2, rrx"),
    (b"\x62\x00\x41\xe0", "subal r0, r1, r2, rrx"),

    # SUBS ------------------------------------------------------------------- #
    (b"\x02\x00\x51\xe2", "subs r0, r1, #2"),
    (b"\x02\x00\x51\x02", "subseq r0, r1, #2"),
    (b"\x02\x00\x51\x12", "subsne r0, r1, #2"),
    (b"\x02\x00\x51\x22", "subscs r0, r1, #2"),
    (b"\x02\x00\x51\x32", "subscc r0, r1, #2"),
    (b"\x02\x00\x51\x42", "subsmi r0, r1, #2"),
    (b"\x02\x00\x51\x52", "subspl r0, r1, #2"),
    (b"\x02\x00\x51\x62", "subsvs r0, r1, #2"),
    (b"\x02\x00\x51\x72", "subsvc r0, r1, #2"),
    (b"\x02\x00\x51\x82", "subshi r0, r1, #2"),
    (b"\x02\x00\x51\x92", "subsls r0, r1, #2"),
    (b"\x02\x00\x51\xa2", "subsge r0, r1, #2"),
    (b"\x02\x00\x51\xb2", "subslt r0, r1, #2"),
    (b"\x02\x00\x51\xc2", "subsgt r0, r1, #2"),
    (b"\x02\x00\x51\xd2", "subsle r0, r1, #2"),
    (b"\x02\x00\x51\xe2", "subsal r0, r1, #2"),

    (b"\x03\x00\x51\xe0", "subs r0, r1, r3"),
    (b"\x03\x00\x51\x00", "subseq r0, r1, r3"),
    (b"\x03\x00\x51\x10", "subsne r0, r1, r3"),
    (b"\x03\x00\x51\x20", "subscs r0, r1, r3"),
    (b"\x03\x00\x51\x30", "subscc r0, r1, r3"),
    (b"\x03\x00\x51\x40", "subsmi r0, r1, r3"),
    (b"\x03\x00\x51\x50", "subspl r0, r1, r3"),
    (b"\x03\x00\x51\x60", "subsvs r0, r1, r3"),
    (b"\x03\x00\x51\x70", "subsvc r0, r1, r3"),
    (b"\x03\x00\x51\x80", "subshi r0, r1, r3"),
    (b"\x03\x00\x51\x90", "subsls r0, r1, r3"),
    (b"\x03\x00\x51\xa0", "subsge r0, r1, r3"),
    (b"\x03\x00\x51\xb0", "subslt r0, r1, r3"),
    (b"\x03\x00\x51\xc0", "subsgt r0, r1, r3"),
    (b"\x03\x00\x51\xd0", "subsle r0, r1, r3"),
    (b"\x03\x00\x51\xe0", "subsal r0, r1, r3"),

    (b"\x42\x02\x51\x00", "subseq r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x10", "subsne r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x20", "subscs r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x30", "subscc r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x40", "subsmi r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x50", "subspl r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x60", "subsvs r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x70", "subsvc r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x80", "subshi r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\x90", "subsls r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\xa0", "subsge r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\xb0", "subslt r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\xc0", "subsgt r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\xd0", "subsle r0, r1, r2, asr #4"),
    (b"\x42\x02\x51\xe0", "subsal r0, r1, r2, asr #4"),

    (b"\x52\x03\x51\x00", "subseq r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x10", "subsne r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x20", "subscs r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x30", "subscc r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x40", "subsmi r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x50", "subspl r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x60", "subsvs r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x70", "subsvc r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x80", "subshi r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\x90", "subsls r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\xa0", "subsge r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\xb0", "subslt r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\xc0", "subsgt r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\xd0", "subsle r0, r1, r2, asr r3"),
    (b"\x52\x03\x51\xe0", "subsal r0, r1, r2, asr r3"),

    (b"\x02\x02\x51\x00", "subseq r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x10", "subsne r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x20", "subscs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x30", "subscc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x40", "subsmi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x50", "subspl r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x60", "subsvs r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x70", "subsvc r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x80", "subshi r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\x90", "subsls r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\xa0", "subsge r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\xb0", "subslt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\xc0", "subsgt r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\xd0", "subsle r0, r1, r2, lsl #4"),
    (b"\x02\x02\x51\xe0", "subsal r0, r1, r2, lsl #4"),

    (b"\x12\x03\x51\x00", "subseq r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x10", "subsne r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x20", "subscs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x30", "subscc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x40", "subsmi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x50", "subspl r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x60", "subsvs r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x70", "subsvc r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x80", "subshi r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\x90", "subsls r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\xa0", "subsge r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\xb0", "subslt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\xc0", "subsgt r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\xd0", "subsle r0, r1, r2, lsl r3"),
    (b"\x12\x03\x51\xe0", "subsal r0, r1, r2, lsl r3"),

    (b"\x22\x02\x51\x00", "subseq r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x10", "subsne r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x20", "subscs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x30", "subscc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x40", "subsmi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x50", "subspl r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x60", "subsvs r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x70", "subsvc r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x80", "subshi r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\x90", "subsls r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\xa0", "subsge r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\xb0", "subslt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\xc0", "subsgt r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\xd0", "subsle r0, r1, r2, lsr #4"),
    (b"\x22\x02\x51\xe0", "subsal r0, r1, r2, lsr #4"),

    (b"\x32\x03\x51\x00", "subseq r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x10", "subsne r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x20", "subscs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x30", "subscc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x40", "subsmi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x50", "subspl r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x60", "subsvs r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x70", "subsvc r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x80", "subshi r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\x90", "subsls r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\xa0", "subsge r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\xb0", "subslt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\xc0", "subsgt r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\xd0", "subsle r0, r1, r2, lsr r3"),
    (b"\x32\x03\x51\xe0", "subsal r0, r1, r2, lsr r3"),

    (b"\x62\x02\x51\x00", "subseq r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x10", "subsne r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x20", "subscs r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x30", "subscc r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x40", "subsmi r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x50", "subspl r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x60", "subsvs r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x70", "subsvc r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x80", "subshi r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\x90", "subsls r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\xa0", "subsge r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\xb0", "subslt r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\xc0", "subsgt r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\xd0", "subsle r0, r1, r2, ror #4"),
    (b"\x62\x02\x51\xe0", "subsal r0, r1, r2, ror #4"),

    (b"\x72\x03\x51\x00", "subseq r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x10", "subsne r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x20", "subscs r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x30", "subscc r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x40", "subsmi r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x50", "subspl r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x60", "subsvs r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x70", "subsvc r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x80", "subshi r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\x90", "subsls r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\xa0", "subsge r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\xb0", "subslt r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\xc0", "subsgt r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\xd0", "subsle r0, r1, r2, ror r3"),
    (b"\x72\x03\x51\xe0", "subsal r0, r1, r2, ror r3"),

    (b"\x62\x00\x51\x00", "subseq r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x10", "subsne r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x20", "subscs r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x30", "subscc r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x40", "subsmi r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x50", "subspl r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x60", "subsvs r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x70", "subsvc r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x80", "subshi r0, r1, r2, rrx"),
    (b"\x62\x00\x51\x90", "subsls r0, r1, r2, rrx"),
    (b"\x62\x00\x51\xa0", "subsge r0, r1, r2, rrx"),
    (b"\x62\x00\x51\xb0", "subslt r0, r1, r2, rrx"),
    (b"\x62\x00\x51\xc0", "subsgt r0, r1, r2, rrx"),
    (b"\x62\x00\x51\xd0", "subsle r0, r1, r2, rrx"),
    (b"\x62\x00\x51\xe0", "subsal r0, r1, r2, rrx"),

    # SUB(S) with PC as operand ---------------------------------------------- #
    (b"\x0f\x00\x41\xe0", "sub r0, r1, pc"),
    (b"\x02\x00\x4f\xe0", "sub r0, pc, r2"),

    (b"\x4f\x01\x41\xe0", "sub r0, r1, pc, asr #2"),
    (b"\x42\x01\x4f\xe0", "sub r0, pc, r2, asr #2"),
    (b"\x0f\x01\x41\xe0", "sub r0, r1, pc, lsl #2"),
    (b"\x02\x01\x4f\xe0", "sub r0, pc, r2, lsl #2"),
    (b"\x2f\x01\x41\xe0", "sub r0, r1, pc, lsr #2"),
    (b"\x22\x01\x4f\xe0", "sub r0, pc, r2, lsr #2"),
    (b"\x6f\x01\x41\xe0", "sub r0, r1, pc, ror #2"),
    (b"\x62\x01\x4f\xe0", "sub r0, pc, r2, ror #2"),
    (b"\x6f\x00\x41\xe0", "sub r0, r1, pc, rrx"),
    (b"\x62\x00\x4f\xe0", "sub r0, pc, r2, rrx"),
    (b"\x5f\x03\x41\xe0", "sub r0, r1, pc, asr r3"),
    (b"\x52\x03\x4f\xe0", "sub r0, pc, r2, asr r3"),
    (b"\x1f\x03\x41\xe0", "sub r0, r1, pc, lsl r3"),
    (b"\x12\x03\x4f\xe0", "sub r0, pc, r2, lsl r3"),
    (b"\x3f\x03\x41\xe0", "sub r0, r1, pc, lsr r3"),
    (b"\x32\x03\x4f\xe0", "sub r0, pc, r2, lsr r3"),
    (b"\x7f\x03\x41\xe0", "sub r0, r1, pc, ror r3"),
    (b"\x72\x03\x4f\xe0", "sub r0, pc, r2, ror r3"),

    (b"\x4f\x01\x51\xe0", "subs r0, r1, pc, asr #2"),
    (b"\x42\x01\x5f\xe0", "subs r0, pc, r2, asr #2"),
    (b"\x0f\x01\x51\xe0", "subs r0, r1, pc, lsl #2"),
    (b"\x02\x01\x5f\xe0", "subs r0, pc, r2, lsl #2"),
    (b"\x2f\x01\x51\xe0", "subs r0, r1, pc, lsr #2"),
    (b"\x22\x01\x5f\xe0", "subs r0, pc, r2, lsr #2"),
    (b"\x6f\x01\x51\xe0", "subs r0, r1, pc, ror #2"),
    (b"\x62\x01\x5f\xe0", "subs r0, pc, r2, ror #2"),
    (b"\x6f\x00\x51\xe0", "subs r0, r1, pc, rrx"),
    (b"\x62\x00\x5f\xe0", "subs r0, pc, r2, rrx"),
    (b"\x5f\x03\x51\xe0", "subs r0, r1, pc, asr r3"),
    (b"\x52\x03\x5f\xe0", "subs r0, pc, r2, asr r3"),
    (b"\x1f\x03\x51\xe0", "subs r0, r1, pc, lsl r3"),
    (b"\x12\x03\x5f\xe0", "subs r0, pc, r2, lsl r3"),
    (b"\x3f\x03\x51\xe0", "subs r0, r1, pc, lsr r3"),
    (b"\x32\x03\x5f\xe0", "subs r0, pc, r2, lsr r3"),
    (b"\x7f\x03\x51\xe0", "subs r0, r1, pc, ror r3"),
    (b"\x72\x03\x5f\xe0", "subs r0, pc, r2, ror r3"),

    # SUB(S) with SP as operand ---------------------------------------------- #
    (b"\x02\x00\x5d\xe2", "subs r0, sp, #2"),
    (b"\x02\x00\x5d\x02", "subseq r0, sp, #2"),
    (b"\x02\x00\x5d\x12", "subsne r0, sp, #2"),
    (b"\x02\x00\x5d\x22", "subscs r0, sp, #2"),
    (b"\x02\x00\x5d\x32", "subscc r0, sp, #2"),
    (b"\x02\x00\x5d\x42", "subsmi r0, sp, #2"),
    (b"\x02\x00\x5d\x52", "subspl r0, sp, #2"),
    (b"\x02\x00\x5d\x62", "subsvs r0, sp, #2"),
    (b"\x02\x00\x5d\x72", "subsvc r0, sp, #2"),
    (b"\x02\x00\x5d\x82", "subshi r0, sp, #2"),
    (b"\x02\x00\x5d\x92", "subsls r0, sp, #2"),
    (b"\x02\x00\x5d\xa2", "subsge r0, sp, #2"),
    (b"\x02\x00\x5d\xb2", "subslt r0, sp, #2"),
    (b"\x02\x00\x5d\xc2", "subsgt r0, sp, #2"),
    (b"\x02\x00\x5d\xd2", "subsle r0, sp, #2"),
    (b"\x02\x00\x5d\xe2", "subsal r0, sp, #2"),

    (b"\x03\x00\x5d\xe0", "subs r0, sp, r3"),
    (b"\x03\x00\x5d\x00", "subseq r0, sp, r3"),
    (b"\x03\x00\x5d\x10", "subsne r0, sp, r3"),
    (b"\x03\x00\x5d\x20", "subscs r0, sp, r3"),
    (b"\x03\x00\x5d\x30", "subscc r0, sp, r3"),
    (b"\x03\x00\x5d\x40", "subsmi r0, sp, r3"),
    (b"\x03\x00\x5d\x50", "subspl r0, sp, r3"),
    (b"\x03\x00\x5d\x60", "subsvs r0, sp, r3"),
    (b"\x03\x00\x5d\x70", "subsvc r0, sp, r3"),
    (b"\x03\x00\x5d\x80", "subshi r0, sp, r3"),
    (b"\x03\x00\x5d\x90", "subsls r0, sp, r3"),
    (b"\x03\x00\x5d\xa0", "subsge r0, sp, r3"),
    (b"\x03\x00\x5d\xb0", "subslt r0, sp, r3"),
    (b"\x03\x00\x5d\xc0", "subsgt r0, sp, r3"),
    (b"\x03\x00\x5d\xd0", "subsle r0, sp, r3"),
    (b"\x03\x00\x5d\xe0", "subsal r0, sp, r3"),

    (b"\x02\xd0\x5d\xe2", "subs sp, sp, #2"),
    (b"\x02\xd0\x5d\x02", "subseq sp, sp, #2"),
    (b"\x02\xd0\x5d\x12", "subsne sp, sp, #2"),
    (b"\x02\xd0\x5d\x22", "subscs sp, sp, #2"),
    (b"\x02\xd0\x5d\x32", "subscc sp, sp, #2"),
    (b"\x02\xd0\x5d\x42", "subsmi sp, sp, #2"),
    (b"\x02\xd0\x5d\x52", "subspl sp, sp, #2"),
    (b"\x02\xd0\x5d\x62", "subsvs sp, sp, #2"),
    (b"\x02\xd0\x5d\x72", "subsvc sp, sp, #2"),
    (b"\x02\xd0\x5d\x82", "subshi sp, sp, #2"),
    (b"\x02\xd0\x5d\x92", "subsls sp, sp, #2"),
    (b"\x02\xd0\x5d\xa2", "subsge sp, sp, #2"),
    (b"\x02\xd0\x5d\xb2", "subslt sp, sp, #2"),
    (b"\x02\xd0\x5d\xc2", "subsgt sp, sp, #2"),
    (b"\x02\xd0\x5d\xd2", "subsle sp, sp, #2"),
    (b"\x02\xd0\x5d\xe2", "subsal sp, sp, #2"),

    (b"\x03\xd0\x5d\xe0", "subs sp, sp, r3"),
    (b"\x03\xd0\x5d\x00", "subseq sp, sp, r3"),
    (b"\x03\xd0\x5d\x10", "subsne sp, sp, r3"),
    (b"\x03\xd0\x5d\x20", "subscs sp, sp, r3"),
    (b"\x03\xd0\x5d\x30", "subscc sp, sp, r3"),
    (b"\x03\xd0\x5d\x40", "subsmi sp, sp, r3"),
    (b"\x03\xd0\x5d\x50", "subspl sp, sp, r3"),
    (b"\x03\xd0\x5d\x60", "subsvs sp, sp, r3"),
    (b"\x03\xd0\x5d\x70", "subsvc sp, sp, r3"),
    (b"\x03\xd0\x5d\x80", "subshi sp, sp, r3"),
    (b"\x03\xd0\x5d\x90", "subsls sp, sp, r3"),
    (b"\x03\xd0\x5d\xa0", "subsge sp, sp, r3"),
    (b"\x03\xd0\x5d\xb0", "subslt sp, sp, r3"),
    (b"\x03\xd0\x5d\xc0", "subsgt sp, sp, r3"),
    (b"\x03\xd0\x5d\xd0", "subsle sp, sp, r3"),
    (b"\x03\xd0\x5d\xe0", "subsal sp, sp, r3"),

    (b"\x1d\xdd\x4d\xe0", "sub sp, sp, sp, lsl sp"),
    (b"\x1d\xdd\x5d\xe0", "subs sp, sp, sp, lsl sp"),
    (b"\x3d\xdd\x4d\xe0", "sub sp, sp, sp, lsr sp"),
    (b"\x3d\xdd\x5d\xe0", "subs sp, sp, sp, lsr sp"),
    (b"\x5d\xdd\x4d\xe0", "sub sp, sp, sp, asr sp"),
    (b"\x5d\xdd\x5d\xe0", "subs sp, sp, sp, asr sp"),
    (b"\x5d\xdd\x4d\xe0", "sub sp, sp, sp, asr sp"),
    (b"\x5d\xdd\x5d\xe0", "subs sp, sp, sp, asr sp"),
    (b"\x7d\xdd\x4d\xe0", "sub sp, sp, sp, ror sp"),
    (b"\x7d\xdd\x5d\xe0", "subs sp, sp, sp, ror sp"),
    (b"\x7d\xdd\x4d\xe0", "sub sp, sp, sp, ror sp"),
    (b"\x7d\xdd\x5d\xe0", "subs sp, sp, sp, ror sp"),

    # TST -------------------------------------------------------------------- #
    (b"\x01\x00\x10\x01", "tsteq r0, r1"),
    (b"\x01\x00\x10\x11", "tstne r0, r1"),
    (b"\x01\x00\x10\x21", "tstcs r0, r1"),
    (b"\x01\x00\x10\x31", "tstcc r0, r1"),
    (b"\x01\x00\x10\x41", "tstmi r0, r1"),
    (b"\x01\x00\x10\x51", "tstpl r0, r1"),
    (b"\x01\x00\x10\x61", "tstvs r0, r1"),
    (b"\x01\x00\x10\x71", "tstvc r0, r1"),
    (b"\x01\x00\x10\x81", "tsthi r0, r1"),
    (b"\x01\x00\x10\x91", "tstls r0, r1"),
    (b"\x01\x00\x10\xa1", "tstge r0, r1"),
    (b"\x01\x00\x10\xb1", "tstlt r0, r1"),
    (b"\x01\x00\x10\xc1", "tstgt r0, r1"),
    (b"\x01\x00\x10\xd1", "tstle r0, r1"),
    (b"\x01\x00\x10\xe1", "tstal r0, r1"),

    (b"\x04\x00\x10\x03", "tsteq r0, #4"),
    (b"\x04\x00\x10\x13", "tstne r0, #4"),
    (b"\x04\x00\x10\x23", "tstcs r0, #4"),
    (b"\x04\x00\x10\x33", "tstcc r0, #4"),
    (b"\x04\x00\x10\x43", "tstmi r0, #4"),
    (b"\x04\x00\x10\x53", "tstpl r0, #4"),
    (b"\x04\x00\x10\x63", "tstvs r0, #4"),
    (b"\x04\x00\x10\x73", "tstvc r0, #4"),
    (b"\x04\x00\x10\x83", "tsthi r0, #4"),
    (b"\x04\x00\x10\x93", "tstls r0, #4"),
    (b"\x04\x00\x10\xa3", "tstge r0, #4"),
    (b"\x04\x00\x10\xb3", "tstlt r0, #4"),
    (b"\x04\x00\x10\xc3", "tstgt r0, #4"),
    (b"\x04\x00\x10\xd3", "tstle r0, #4"),
    (b"\x04\x00\x10\xe3", "tstal r0, #4"),
]


def hook_code(mu, address, size, istate):
    print(">>> Tracing instruction at 0x%x, instruction size = 0x%x" %(address, size))

    ostate = {
        "stack": mu.mem_read(STACK, 0x100),
        "heap":  mu.mem_read(HEAP, 0x100),
        "r0":    mu.reg_read(UC_ARM_REG_R0),
        "r1":    mu.reg_read(UC_ARM_REG_R1),
        "r2":    mu.reg_read(UC_ARM_REG_R2),
        "r3":    mu.reg_read(UC_ARM_REG_R3),
        "r4":    mu.reg_read(UC_ARM_REG_R4),
        "r5":    mu.reg_read(UC_ARM_REG_R5),
        "r6":    mu.reg_read(UC_ARM_REG_R6),
        "r7":    mu.reg_read(UC_ARM_REG_R7),
        "r8":    mu.reg_read(UC_ARM_REG_R8),
        "r9":    mu.reg_read(UC_ARM_REG_R9),
        "r10":   mu.reg_read(UC_ARM_REG_R10),
        "r11":   mu.reg_read(UC_ARM_REG_R11),
        "r12":   mu.reg_read(UC_ARM_REG_R12),
        "sp":    mu.reg_read(UC_ARM_REG_SP),
        "r14":   mu.reg_read(UC_ARM_REG_R14),
        "pc":    mu.reg_read(UC_ARM_REG_PC),
        "n":   ((mu.reg_read(UC_ARM_REG_APSR) >> 31) & 1),
        "z":   ((mu.reg_read(UC_ARM_REG_APSR) >> 30) & 1),
        "c":   ((mu.reg_read(UC_ARM_REG_APSR) >> 29) & 1),
        "v":   ((mu.reg_read(UC_ARM_REG_APSR) >> 28) & 1),
    }

    # print_state(istate, istate, ostate)

def emu_with_unicorn(opcode, istate):
    # Initialize emulator in arm32 mode
    mu = Uc(UC_ARCH_ARM, UC_MODE_ARM)

    # map memory for this emulation
    mu.mem_map(ADDR, SIZE)

    # write machine code to be emulated to memory
    index = 0
    for op, _ in CODE:
        mu.mem_write(ADDR+index, op)
        index += len(op)

    apsr = mu.reg_read(UC_ARM_REG_APSR)
    nzcv = istate['n'] << 31 | istate['z'] << 30 | istate['c'] << 29 | istate['v'] << 28

    mu.mem_write(STACK,                bytes(istate['stack']))
    mu.mem_write(HEAP,                 bytes(istate['heap']))
    mu.reg_write(UC_ARM_REG_R0,        istate['r0'])
    mu.reg_write(UC_ARM_REG_R1,        istate['r1'])
    mu.reg_write(UC_ARM_REG_R2,        istate['r2'])
    mu.reg_write(UC_ARM_REG_R3,        istate['r3'])
    mu.reg_write(UC_ARM_REG_R4,        istate['r4'])
    mu.reg_write(UC_ARM_REG_R5,        istate['r5'])
    mu.reg_write(UC_ARM_REG_R6,        istate['r6'])
    mu.reg_write(UC_ARM_REG_R7,        istate['r7'])
    mu.reg_write(UC_ARM_REG_R8,        istate['r8'])
    mu.reg_write(UC_ARM_REG_R9,        istate['r9'])
    mu.reg_write(UC_ARM_REG_R10,       istate['r10'])
    mu.reg_write(UC_ARM_REG_R11,       istate['r11'])
    mu.reg_write(UC_ARM_REG_R12,       istate['r12'])
    mu.reg_write(UC_ARM_REG_SP,        istate['sp'])
    mu.reg_write(UC_ARM_REG_R14,       istate['r14'])
    mu.reg_write(UC_ARM_REG_PC,        istate['pc'])
    mu.reg_write(UC_ARM_REG_APSR,      apsr & 0x0fffffff | nzcv)

    # # tracing all instructions with customized callback
    # mu.hook_add(UC_HOOK_CODE, hook_code, user_data=istate)

    # emulate code in infinite time & unlimited instructions
    # print("[UC] Executing from {:#x} to {:#x}".format(istate['pc'], istate['pc'] + len(opcode)))
    # NOTE: The +4 and count=1 is a trick so UC updates PC.
    mu.emu_start(istate['pc'], istate['pc'] + len(opcode) + 4, count=1)

    ostate = {
        "stack": mu.mem_read(STACK, 0x100),
        "heap":  mu.mem_read(HEAP, 0x100),
        "r0":    mu.reg_read(UC_ARM_REG_R0),
        "r1":    mu.reg_read(UC_ARM_REG_R1),
        "r2":    mu.reg_read(UC_ARM_REG_R2),
        "r3":    mu.reg_read(UC_ARM_REG_R3),
        "r4":    mu.reg_read(UC_ARM_REG_R4),
        "r5":    mu.reg_read(UC_ARM_REG_R5),
        "r6":    mu.reg_read(UC_ARM_REG_R6),
        "r7":    mu.reg_read(UC_ARM_REG_R7),
        "r8":    mu.reg_read(UC_ARM_REG_R8),
        "r9":    mu.reg_read(UC_ARM_REG_R9),
        "r10":   mu.reg_read(UC_ARM_REG_R10),
        "r11":   mu.reg_read(UC_ARM_REG_R11),
        "r12":   mu.reg_read(UC_ARM_REG_R12),
        "sp":    mu.reg_read(UC_ARM_REG_SP),
        "r14":   mu.reg_read(UC_ARM_REG_R14),
        "pc":    mu.reg_read(UC_ARM_REG_PC),
        "n":   ((mu.reg_read(UC_ARM_REG_APSR) >> 31) & 1),
        "z":   ((mu.reg_read(UC_ARM_REG_APSR) >> 30) & 1),
        "c":   ((mu.reg_read(UC_ARM_REG_APSR) >> 29) & 1),
        "v":   ((mu.reg_read(UC_ARM_REG_APSR) >> 28) & 1),
    }
    return ostate

def emu_with_triton(opcode, istate):
    ctx = TritonContext()
    ctx.setArchitecture(ARCH.ARM32)

    inst = Instruction(opcode)
    inst.setAddress(istate['pc'])

    ctx.setConcreteMemoryAreaValue(STACK,           bytes(istate['stack']))
    ctx.setConcreteMemoryAreaValue(HEAP,            bytes(istate['heap']))
    ctx.setConcreteRegisterValue(ctx.registers.r0,  istate['r0'])
    ctx.setConcreteRegisterValue(ctx.registers.r1,  istate['r1'])
    ctx.setConcreteRegisterValue(ctx.registers.r2,  istate['r2'])
    ctx.setConcreteRegisterValue(ctx.registers.r3,  istate['r3'])
    ctx.setConcreteRegisterValue(ctx.registers.r4,  istate['r4'])
    ctx.setConcreteRegisterValue(ctx.registers.r5,  istate['r5'])
    ctx.setConcreteRegisterValue(ctx.registers.r6,  istate['r6'])
    ctx.setConcreteRegisterValue(ctx.registers.r7,  istate['r7'])
    ctx.setConcreteRegisterValue(ctx.registers.r8,  istate['r8'])
    ctx.setConcreteRegisterValue(ctx.registers.r9,  istate['r9'])
    ctx.setConcreteRegisterValue(ctx.registers.r10, istate['r10'])
    ctx.setConcreteRegisterValue(ctx.registers.r11, istate['r11'])
    ctx.setConcreteRegisterValue(ctx.registers.r12, istate['r12'])
    ctx.setConcreteRegisterValue(ctx.registers.sp,  istate['sp'])
    ctx.setConcreteRegisterValue(ctx.registers.r14, istate['r14'])
    ctx.setConcreteRegisterValue(ctx.registers.pc,  istate['pc'])
    ctx.setConcreteRegisterValue(ctx.registers.n,   istate['n'])
    ctx.setConcreteRegisterValue(ctx.registers.z,   istate['z'])
    ctx.setConcreteRegisterValue(ctx.registers.c,   istate['c'])
    ctx.setConcreteRegisterValue(ctx.registers.v,   istate['v'])

    ctx.processing(inst)

    if DEBUG:
        print()
        print(inst)
        for x in inst.getSymbolicExpressions():
           print(x)
        print()

    ostate = {
        "stack": ctx.getConcreteMemoryAreaValue(STACK, 0x100),
        "heap":  ctx.getConcreteMemoryAreaValue(HEAP, 0x100),
        "r0":    ctx.getSymbolicRegisterValue(ctx.registers.r0),
        "r1":    ctx.getSymbolicRegisterValue(ctx.registers.r1),
        "r2":    ctx.getSymbolicRegisterValue(ctx.registers.r2),
        "r3":    ctx.getSymbolicRegisterValue(ctx.registers.r3),
        "r4":    ctx.getSymbolicRegisterValue(ctx.registers.r4),
        "r5":    ctx.getSymbolicRegisterValue(ctx.registers.r5),
        "r6":    ctx.getSymbolicRegisterValue(ctx.registers.r6),
        "r7":    ctx.getSymbolicRegisterValue(ctx.registers.r7),
        "r8":    ctx.getSymbolicRegisterValue(ctx.registers.r8),
        "r9":    ctx.getSymbolicRegisterValue(ctx.registers.r9),
        "r10":   ctx.getSymbolicRegisterValue(ctx.registers.r10),
        "r11":   ctx.getSymbolicRegisterValue(ctx.registers.r11),
        "r12":   ctx.getSymbolicRegisterValue(ctx.registers.r12),
        "sp":    ctx.getSymbolicRegisterValue(ctx.registers.sp),
        "r14":   ctx.getSymbolicRegisterValue(ctx.registers.r14),
        "pc":    ctx.getSymbolicRegisterValue(ctx.registers.pc),
        "n":     ctx.getSymbolicRegisterValue(ctx.registers.n),
        "z":     ctx.getSymbolicRegisterValue(ctx.registers.z),
        "c":     ctx.getSymbolicRegisterValue(ctx.registers.c),
        "v":     ctx.getSymbolicRegisterValue(ctx.registers.v),
    }
    return ostate

def diff_state(state1, state2):
    for k, v in list(state1.items()):
        if (k == 'heap' or k == 'stack') and v != state2[k]:
            print('\t%s: (UC) != (TT)' %(k))
        elif not (k == 'heap' or k == 'stack') and v != state2[k]:
            print('\t%s: %#x (UC) != %#x (TT)' %(k, v, state2[k]))
    return

def print_state(istate, uc_ostate, tt_ostate):
    for k in sorted(istate.keys()):
        if k in ['stack', 'heap']:
            continue

        diff = "!=" if uc_ostate[k] != tt_ostate[k] else "=="

        print("{:>3s}: {:08x} | {:08x} {} {:08x}".format(k, istate[k], uc_ostate[k], diff, tt_ostate[k]))


if __name__ == '__main__':
    # initial state
    state = {
        "stack": b"".join([bytes(255 - i) for i in range(256)]),
        "heap":  b"".join([bytes(i) for i in range(256)]),
        "r0":    random.randint(0x0, 0xffffffff),
        "r1":    random.randint(0x0, 0xffffffff),
        "r2":    random.randint(0x0, 0xffffffff),
        "r3":    random.randint(0x0, 0xffffffff),
        "r4":    random.randint(0x0, 0xffffffff),
        "r5":    random.randint(0x0, 0xffffffff),
        "r6":    random.randint(0x0, 0xffffffff),
        "r7":    random.randint(0x0, 0xffffffff),
        "r8":    random.randint(0x0, 0xffffffff),
        "r9":    random.randint(0x0, 0xffffffff),
        "r10":   random.randint(0x0, 0xffffffff),
        "r11":   random.randint(0x0, 0xffffffff),
        "r12":   random.randint(0x0, 0xffffffff),
        "sp":    STACK,
        "r14":   random.randint(0x0, 0xffffffff),
        "pc":    ADDR,
        "n":     random.randint(0x0, 0x1),
        "z":     random.randint(0x0, 0x1),
        "c":     random.randint(0x0, 0x1),
        "v":     random.randint(0x0, 0x1),
    }

    # NOTE: This tests each instruction separatly. Therefore, it keeps track of
    # PC and resets the initial state after testing each instruction.
    pc = ADDR
    for opcode, disassembly in CODE:
        try:
            state['pc'] = pc
            uc_state = emu_with_unicorn(opcode, state)
            tt_state = emu_with_triton(opcode, state)
            pc += len(opcode)
        except Exception as e:
            print('[KO] %s' %(disassembly))
            print('\t%s' %(e))
            sys.exit(-1)

        if uc_state != tt_state:
            print('[KO] %s' %(disassembly))
            diff_state(uc_state, tt_state)
            print_state(state, uc_state, tt_state)
            sys.exit(-1)

        print('[OK] %s' %(disassembly))

    sys.exit(0)
