language: cpp

matrix:
    include:
        # Linux gcc 4.8
        - os: linux
          dist: trusty
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['g++-4.8', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=g++-4.8, C_COMPILER=gcc-4.8, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux gcc 4.9
        - os: linux
          dist: trusty
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['g++-4.9', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=g++-4.9, C_COMPILER=gcc-4.9, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux gcc 5.0
        - os: linux
          dist: trusty
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['g++-5', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=g++-5, C_COMPILER=gcc-5, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux gcc 5.0 with gcov
        - os: linux
          dist: trusty
          compiler: gcc
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['g++-5', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ GCOV=ON, CXX_COMPILER=g++-5, C_COMPILER=gcc-5, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 3.5
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['clang-3.5', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-3.5, C_COMPILER=clang-3.5, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 3.6
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['clang-3.6', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-3.6, C_COMPILER=clang-3.6, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 3.7
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.7']
              packages: ['clang-3.7', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-3.7, C_COMPILER=clang-3.7, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 3.8
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['clang-3.8', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-3.8, C_COMPILER=clang-3.8, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 3.9
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test']
              packages: ['clang-3.9', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-3.9, C_COMPILER=clang-3.9, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 4.0
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test', "llvm-toolchain-trusty-4.0"]
              packages: ['clang-4.0', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-4.0, C_COMPILER=clang-4.0, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # Linux clang 5.0
        - os: linux
          dist: trusty
          compiler: clang
          addons:
            apt:
              sources: ['ubuntu-toolchain-r-test', "llvm-toolchain-trusty-5.0"]
              packages: ['clang-5.0', 'ccache', 'libpython2.7', 'libboost1.55-all-dev', 'cmake', 'cmake-data']
          env: [ CXX_COMPILER=clang++-5.0, C_COMPILER=clang-5.0, PYTHON_VERSION=2.7, Z3_PKG=z3-4.6.0-x64-ubuntu-14.04 ]

        # OSX xcode 7.3
        - os: osx
          osx_image: xcode7.3
          compiler: clang
          env: [ CXX_COMPILER=clang++, C_COMPILER=clang, PYTHON_VERSION=2.7, TT_PYTHON_ENV='-DPYTHON_INCLUDE_DIR=/usr/local/Cellar/python/2.7.12_1/Frameworks/Python.framework/Headers -DPYTHON_LIBRARY=/usr/local/Cellar/python/2.7.12_1/Frameworks/Python.framework/Versions/2.7/lib/libpython2.7.dylib' ]

        ## OSX xcode 8.3
        #- os: osx
        #  language: generic
        #  osx_image: xcode8.3
        #  compiler: clang
        #  env: [ CXX_COMPILER=clang++, C_COMPILER=clang, PYTHON_VERSION=2.7, TT_PYTHON_ENV='' ]

notifications:
  email: false

sudo: required

cache:
  - apt
  - ccache

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://github.com/Z3Prover/z3/releases/download/z3-4.6.0/${Z3_PKG}.zip; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then unzip ${Z3_PKG}.zip; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install python-setuptools; fi
  - export CC="$C_COMPILER"
  - export CXX="$CXX_COMPILER"
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PREFIX="/usr/local"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew install z3 capstone; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export DYLD_LIBRARY_PATH=/usr/local/opt/capstone/lib/:$DYLD_LIBRARY_PATH; fi
  # Back to /home/travis/build/JonathanSalwan
  - cd ..

install:
  # Install gcov
  - if [ "$GCOV" == "ON" ]; then sudo ln -sf /usr/bin/gcov-5 /usr/bin/gcov; fi
  - if [ "$GCOV" == "ON" ]; then wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.13.orig.tar.gz; fi
  - if [ "$GCOV" == "ON" ]; then tar xf lcov_1.13.orig.tar.gz; fi
  - if [ "$GCOV" == "ON" ]; then sudo make -C lcov-1.13/ install; fi
  # Install capstone
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then git clone https://github.com/aquynh/capstone.git; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd capstone; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then bash ./make.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo make install; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ../; fi
  # Download pin
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget http://software.intel.com/sites/landingpage/pintool/downloads/pin-2.14-71313-gcc.4.4.7-linux.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then tar -xf pin-2.14-71313-gcc.4.4.7-linux.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget http://software.intel.com/sites/landingpage/pintool/downloads/pin-2.14-71313-clang.4.2-mac.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then tar -xf pin-2.14-71313-clang.4.2-mac.tar.gz; fi
  # Install LIEF
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://github.com/lief-project/LIEF/releases/download/0.7.0/linux_lief-0.7.0_py2.7.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo pip2 install linux_lief-0.7.0_py2.7.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget https://github.com/lief-project/LIEF/releases/download/0.7.0/osx_lief-0.7.0_py2.7.tar.gz; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then sudo pip2 install osx_lief-0.7.0_py2.7.tar.gz -v; fi
  # Move Triton into pin
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then mv ./Triton ./pin-2.14-71313-gcc.4.4.7-linux/source/tools/; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cd ./pin-2.14-71313-gcc.4.4.7-linux/source/tools/Triton; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then mv ./Triton ./pin-2.14-71313-clang.4.2-mac/source/tools/; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cd ./pin-2.14-71313-clang.4.2-mac/source/tools/Triton; fi
  # Prepare build
  - mkdir build
  - cd build

script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then cmake -DZ3_INCLUDE_DIRS=$PWD/../${Z3_PKG}/include -DZ3_LIBRARIES=$PWD/../${Z3_PKG}/bin/libz3.so -DPINTOOL=on -DKERNEL4=on -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER .. -DGCOV=${GCOV:OFF}; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then cmake $TT_PYTHON_ENV ..; fi
  - make -j2
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo sh -c "echo 0 > /proc/sys/kernel/yama/ptrace_scope"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then mkdir -p /Users/travis/Library/Python/2.7/lib/python/site-packages; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then echo 'import site; site.addsitedir("/usr/local/lib/python2.7/site-packages")' >> /Users/travis/Library/Python/2.7/lib/python/site-packages/homebrew.pth; fi
  - make check
  # Check installation succeed
  - sudo make install

after_success:
  - if [ "$GCOV" == "ON" ]; then bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"; fi
